{
 "sampleFiles":
[
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/layouts/dock-manager/overview/App.razor",
    "content": "\n@using IgniteUI.Blazor.Controls\n\n<div class=\"container vertical\">\n    <div class=\"container vertical\">\n        <IgbDockManager @ref=\"dockManager\" Layout=\"Layout\" Height=\"100%\" Width=\"100%\">\n            <div slot=\"content1\">Content 1 - pane docked to left side</div>\n            <div slot=\"content2\">Content 2 - pane pinned to left side</div>\n            <div slot=\"content3\">Content 3 - document pane</div>\n            <div slot=\"content4\">Content 4 - document pane</div>\n            <div slot=\"content5\">Content 5</div>\n            <div slot=\"content6\">Content 6 - tab pane 1</div>\n            <div slot=\"content7\">Content 7 - tab pane 2</div>\n            <div slot=\"content8\">Content 8 - pane docked bottom right</div>\n            <div slot=\"content9\">Content 9 - floating pane</div>\n        </IgbDockManager>\n    </div>\n</div>\n\n@code {\n\n    public IgbDockManager dockManager { get; set; }\n    public IgbDockManagerLayout Layout { get; set; }\n\n    protected override void OnInitialized()\n    {\n\n        Layout = new IgbDockManagerLayout();\n        Layout.RootPane = new IgbSplitPane();\n        Layout.RootPane.PaneType = DockManagerPaneType.SplitPane;\n        Layout.RootPane.Orientation = SplitPaneOrientation.Horizontal;\n\n        IgbSplitPane rootsplitPane1 = new IgbSplitPane\n            {\n                PaneType = DockManagerPaneType.SplitPane,\n                Orientation = SplitPaneOrientation.Vertical,\n            };\n\n        IgbContentPane contentPane1 = new IgbContentPane\n            {\n                PaneType = DockManagerPaneType.ContentPane,\n                Header = \"Content Pane 1\",\n                ContentId = \"content1\"\n            };\n\n        IgbContentPane contentPane2 = new IgbContentPane\n            {\n                PaneType = DockManagerPaneType.ContentPane,\n                Header = \"Unpinned Pane 1\",\n                ContentId = \"content2\",\n                IsPinned = false\n            };\n\n        IgbSplitPane splitPane2 = new IgbSplitPane\n            {\n                PaneType = DockManagerPaneType.SplitPane,\n                Orientation = SplitPaneOrientation.Vertical,\n                Size = 200,\n            };\n\n        IgbDocumentHost documentHost1 = new IgbDocumentHost\n            {\n                PaneType = DockManagerPaneType.DocumentHost,\n                Size = 200,\n            };\n\n        IgbSplitPane documentHost1RootSplitPane = new IgbSplitPane\n            {\n                PaneType = DockManagerPaneType.SplitPane,\n                Orientation = SplitPaneOrientation.Horizontal,\n            };\n\n        IgbTabGroupPane tabGroupPane1 = new IgbTabGroupPane\n            {\n                PaneType = DockManagerPaneType.TabGroupPane,\n\n            };\n\n        IgbContentPane documentContentPane1 = new IgbContentPane\n            {\n                PaneType = DockManagerPaneType.ContentPane,\n                Header = \"Document 1\",\n                ContentId = \"content3\"\n            };\n\n        IgbContentPane documentContentPane2 = new IgbContentPane\n            {\n                PaneType = DockManagerPaneType.ContentPane,\n                Header = \"Document 2\",\n                ContentId = \"content4\"\n            };\n\n        IgbContentPane contentPane5 = new IgbContentPane\n            {\n                PaneType = DockManagerPaneType.ContentPane,\n                ContentId = \"content5\",\n                Header = \"Unpinned Pane 2\",\n                IsPinned = false\n            };\n\n        IgbSplitPane rootsplitPane2 = new IgbSplitPane\n        {\n            PaneType = DockManagerPaneType.SplitPane,\n            Orientation = SplitPaneOrientation.Vertical,\n\n        };\n\n        IgbTabGroupPane tabGroupPane2 = new IgbTabGroupPane\n            {\n                PaneType = DockManagerPaneType.TabGroupPane,\n                Size = 200,\n\n            };\n\n        IgbContentPane tabGroupContentPane1 = new IgbContentPane\n            {\n                PaneType = DockManagerPaneType.ContentPane,\n                ContentId = \"content6\",\n                Header = \"Tab 1\"\n            };\n        IgbContentPane tabGroupContentPane2 = new IgbContentPane\n            {\n                PaneType = DockManagerPaneType.ContentPane,\n                ContentId = \"content7\",\n                Header = \"Tab 2\"\n            };\n        IgbContentPane tabGroupContentPane3 = new IgbContentPane\n            {\n                PaneType = DockManagerPaneType.ContentPane,\n                ContentId = \"content8\",\n                Header = \"Tab 3\"\n            };\n        IgbContentPane tabGroupContentPane4 = new IgbContentPane\n            {\n                PaneType = DockManagerPaneType.ContentPane,\n                ContentId = \"content9\",\n                Header = \"Tab 4\"\n            };\n        IgbContentPane tabGroupContentPane5 = new IgbContentPane\n            {\n                PaneType = DockManagerPaneType.ContentPane,\n                ContentId = \"content10\",\n                Header = \"Tab 5\"\n            };\n\n        IgbContentPane contentPane6 = new IgbContentPane\n        {\n            PaneType = DockManagerPaneType.ContentPane,\n            ContentId = \"content11\",\n            Header = \"Content Pane 2\"\n        };\n\n        IgbSplitPane floatingSplitPane = new IgbSplitPane\n        {\n            PaneType = DockManagerPaneType.SplitPane,\n            Orientation = SplitPaneOrientation.Horizontal,\n            FloatingHeight = 150,\n            FloatingWidth = 250,\n            FloatingLocation = new IgbDockManagerPoint { X = 300, Y = 200 },\n\n        };\n        IgbContentPane contentPane7 = new IgbContentPane\n        {\n            PaneType = DockManagerPaneType.ContentPane,\n            ContentId = \"content12\",\n            Header = \"Floating Pane\"\n        };\n\n        rootsplitPane1.Panes.Add(contentPane1);\n        rootsplitPane1.Panes.Add(contentPane2);\n        splitPane2.Panes.Add(documentHost1);\n        splitPane2.Panes.Add(contentPane5);\n        documentHost1.RootPane = documentHost1RootSplitPane;\n        documentHost1RootSplitPane.Panes.Add(tabGroupPane1);\n        tabGroupPane1.Panes.Add(documentContentPane1);\n        tabGroupPane1.Panes.Add(documentContentPane2);\n        rootsplitPane2.Panes.Add(tabGroupPane2);\n        tabGroupPane2.Panes.Add(tabGroupContentPane1);\n        tabGroupPane2.Panes.Add(tabGroupContentPane2);\n        tabGroupPane2.Panes.Add(tabGroupContentPane3);\n        tabGroupPane2.Panes.Add(tabGroupContentPane4);\n        tabGroupPane2.Panes.Add(tabGroupContentPane5);\n        rootsplitPane2.Panes.Add(contentPane6);\n        floatingSplitPane.Panes.Add(contentPane7);\n        Layout.RootPane.Panes.Add(rootsplitPane1);\n        Layout.RootPane.Panes.Add(rootsplitPane2);\n        Layout.FloatingPanes.Add(floatingSplitPane);\n    }\n\n}",
    "isMain": true,
    "fileExtension": "razor",
    "fileHeader": "razor"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/layouts/dock-manager/overview/Program.cs",
    "content": "using System;\nusing System.Net.Http;\nusing System.Collections.Generic;\nusing System.Threading.Tasks;\nusing System.Text;\nusing Microsoft.AspNetCore.Components.WebAssembly.Hosting;\nusing Microsoft.Extensions.Configuration;\nusing Microsoft.Extensions.DependencyInjection;\nusing Microsoft.Extensions.Logging;using IgniteUI.Blazor.Controls; // for registering Ignite UI modules\n\nnamespace Infragistics.Samples\n{\n    public class Program\n    {\n        public static async Task Main(string[] args)\n        {\n            var builder = WebAssemblyHostBuilder.CreateDefault(args);\n            builder.RootComponents.Add<App>(\"app\");\n            builder.Services.AddScoped(sp => new HttpClient { BaseAddress = new Uri(builder.HostEnvironment.BaseAddress) });\n            // registering Ignite UI modules\n            builder.Services.AddIgniteUIBlazor(typeof(IgbDockManagerModule));\n            await builder.Build().RunAsync();\n        }\n    }\n}",
    "isMain": true,
    "fileExtension": "cs",
    "fileHeader": "MODULES"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/layouts/dock-manager/overview/wwwroot/index.css",
    "content": "/* \r\nCSS styles are loaded from the shared CSS file located at:\r\nhttps://static.infragistics.com/xplatform/css/samples/\r\n*/",
    "isMain": true,
    "fileExtension": "css",
    "fileHeader": "css"
  }
]
}