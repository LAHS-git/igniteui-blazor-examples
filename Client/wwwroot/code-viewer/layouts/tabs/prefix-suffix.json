{
 "sampleFiles":
[
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/layouts/tabs/prefix-suffix/App.razor",
    "content": "\n@using IgniteUI.Blazor.Controls\n\n<div class=\"container sample center\">\n    <IgbTabs>\n        <IgbTab Panel=\"home\">\n            <IgbIcon slot=\"prefix\" @ref=ChildIcon IconName=\"home\" Collection=\"material\"/>\n            <span>Home</span>\n            <IgbIconButton slot=\"suffix\" IconName=\"close\" Collection=\"material\" Size=@SizableComponentSize.Small Variant=@IconButtonVariant.Flat/>\n        </IgbTab>\n        <IgbTab Panel=\"search\">\n            <IgbIcon slot=\"prefix\" IconName=\"search\" Collection=\"material\"/>\n            <span>Search</span>\n            <IgbIconButton slot=\"suffix\" IconName=\"close\" Collection=\"material\" Size=@SizableComponentSize.Small Variant=@IconButtonVariant.Flat/>\n        </IgbTab>\n        <IgbTab Panel=\"favorite\">\n            <IgbIcon slot=\"prefix\" IconName=\"favorite\" Collection=\"material\"/>\n            <span>Favorite</span>\n            <IgbIconButton slot=\"suffix\" IconName=\"close\" Collection=\"material\" Size=@SizableComponentSize.Small Variant=@IconButtonVariant.Flat/>\n        </IgbTab>\n        <IgbTabPanel id=\"home\">Home tab panel</IgbTabPanel>\n        <IgbTabPanel id=\"search\">Search tab panel</IgbTabPanel>\n        <IgbTabPanel id=\"favorite\">Favorite tab panel</IgbTabPanel>\n    </IgbTabs>\n</div>\n\n@code {\n    \n\n    public IgbIcon ChildIcon { get; set; }\n\n    protected override async Task OnAfterRenderAsync(bool firstRender)\n    {\n        if (firstRender && this.ChildIcon != null)\n        {\n            await this.ChildIcon.EnsureReady();\n\n            string homeIcon = \"<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 0 24 24' width='24px' fill='#000000'><path d='M0 0h24v24H0z' fill='none'/><path d='M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z'/></svg>\";\n            string searchIcon = \"<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 0 24 24' width='24px'><path d='M0 0h24v24H0z' fill='none'/><path d='M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z'/></svg>\";\n            string favoriteIcon = \"<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 0 24 24' width='24px'><path d='M0 0h24v24H0z' fill='none'/><path d='M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z'/></svg>\";\n            string closeIcon = \"<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 0 24 24' width='24px' fill='#000000'><path d='M0 0h24v24H0z' fill='none'/><path d='M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z'/></svg>\";\n\n            await this.ChildIcon.RegisterIconFromTextAsync(\"home\", homeIcon, \"material\");\n            await this.ChildIcon.RegisterIconFromTextAsync(\"search\", searchIcon, \"material\");\n            await this.ChildIcon.RegisterIconFromTextAsync(\"favorite\", favoriteIcon, \"material\");\n            await this.ChildIcon.RegisterIconFromTextAsync(\"close\", closeIcon, \"material\");\n\n        }\n    }\n}",
    "isMain": true,
    "fileExtension": "razor",
    "fileHeader": "razor"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/layouts/tabs/prefix-suffix/Program.cs",
    "content": "using System;\nusing System.Net.Http;\nusing System.Collections.Generic;\nusing System.Threading.Tasks;\nusing System.Text;\nusing Microsoft.AspNetCore.Components.WebAssembly.Hosting;\nusing Microsoft.Extensions.Configuration;\nusing Microsoft.Extensions.DependencyInjection;\nusing Microsoft.Extensions.Logging;\nusing IgniteUI.Blazor.Controls; // for registering Ignite UI modules\n\nnamespace Infragistics.Samples\n{\n    public class Program\n    {\n        public static async Task Main(string[] args)\n        {\n            var builder = WebAssemblyHostBuilder.CreateDefault(args);\n            builder.RootComponents.Add<App>(\"app\");\n            builder.Services.AddScoped(sp => new HttpClient { BaseAddress = new Uri(builder.HostEnvironment.BaseAddress) });\n            // registering Ignite UI modules\n            builder.Services.AddIgniteUIBlazor(\n                typeof(IgbTabsModule),\n                typeof(IgbIconModule)\n            );\n            await builder.Build().RunAsync();\n        }\n    }\n}",
    "isMain": true,
    "fileExtension": "cs",
    "fileHeader": "MODULES"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/layouts/tabs/prefix-suffix/wwwroot/index.css",
    "content": "/* \r\nCSS styles are loaded from the shared CSS file located at:\r\nhttps://static.infragistics.com/xplatform/css/samples/\r\n*/",
    "isMain": true,
    "fileExtension": "css",
    "fileHeader": "css"
  }
]
}