{
 "sampleFiles":
[
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/data-chart/type-scatter-polygon-series/App.razor",
    "content": "\n@using IgniteUI.Blazor.Controls\n\n@using System.Net.Http.Json\n@inject HttpClient Http\n\n<div class=\"container vertical\">\n    <div class=\"container vertical\">\n\n        <div class=\"options vertical\">\n            <span class=\"legend-title\">Airplane Seating Chart (Polygons)</span>\n        </div>\n\n        <div class=\"custom-legend\">\n          <div><span style=\"background: DodgerBlue; \"></span><label>First Class</label></div>\n          <div><span style=\"background: LimeGreen; \"></span><label>Business Class</label></div>\n          <div><span style=\"background: Orange; \"></span><label>Premium Class</label></div>\n          <div><span style=\"background: Red; \"></span><label>Economy Class</label></div>\n          <div><span style=\"background: Gray; \"></span><label>Sold Seat</label> </div>\n          <div><span style=\"background: LightGray; \"></span><label>Airplane</label> </div>\n        </div>\n\n        @if (AirplaneShape != null && AirplaneSeats != null)\n        {\n            <IgbDataChart Height=\"100%\" Width=\"100%\"\n                       SeriesMouseEnterScript=\"onPolygonSeriesMouseEnter\"\n                       IsHorizontalZoomEnabled=\"true\"\n                       IsVerticalZoomEnabled=\"true\">\n\n                <IgbNumericXAxis Name=\"xAxis\" MinimumValue=\"-1000\" MaximumValue=\"1000\" Interval=\"200\"></IgbNumericXAxis>\n                <IgbNumericYAxis Name=\"yAxis\" MinimumValue=\"-600\" MaximumValue=\"600\" Interval=\"200\"></IgbNumericYAxis>\n\n                <IgbScatterPolygonSeries XAxisName=\"xAxis\"\n                                      YAxisName=\"yAxis\"\n                                      DataSource=\"AirplaneShape\"\n                                      ShapeMemberPath=\"Points\"\n                                      ShowDefaultTooltip=\"false\"\n                                      Thickness=\"0.5\"\n                                      Brush=\"LightGray\" Outline=\"Black\">\n                </IgbScatterPolygonSeries>\n\n                <IgbScatterPolygonSeries XAxisName=\"xAxis\"\n                                      YAxisName=\"yAxis\"\n                                      DataSource=\"AirplaneSeats\"\n                                      Title=\"AirplaneSeats\"\n                                      ShapeMemberPath=\"Points\"\n                                      StyleShapeScript=\"onPolygonShapeStyle\">\n                </IgbScatterPolygonSeries>\n\n            </IgbDataChart>\n        }\n\n    </div>\n</div>\n\n@code {\n    \n\n    private AirplaneSeatInfo[] AirplaneShape;\n    private AirplaneSeatInfo[] AirplaneSeats;\n\n    protected override async Task OnInitializedAsync()\n    {\n        var http = new HttpClient();\n        var shape = \"https://static.infragistics.com/xplatform/json/airplane-shape.json\";\n        this.AirplaneShape = await http.GetFromJsonAsync<AirplaneSeatInfo[]>(shape);\n\n        var seats = \"https://static.infragistics.com/xplatform/json/airplane-seats.json\";\n        this.AirplaneSeats = await http.GetFromJsonAsync<AirplaneSeatInfo[]>(seats);\n    }\n\n    public class AirplaneSeatInfo\n    {\n        public string Seat { get; set; }\n        public string Class { get; set; }\n        public string Price { get; set; }\n        public string Status { get; set; }\n\n        public List<List<Point>> Points { get; set; }\n    }\n}",
    "isMain": true,
    "fileExtension": "razor",
    "fileHeader": "razor"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/data-chart/type-scatter-polygon-series/Program.cs",
    "content": "using System;\nusing System.Net.Http;\nusing System.Collections.Generic;\nusing System.Threading.Tasks;\nusing System.Text;\nusing Microsoft.AspNetCore.Components.WebAssembly.Hosting;\nusing Microsoft.Extensions.Configuration;\nusing Microsoft.Extensions.DependencyInjection;\nusing Microsoft.Extensions.Logging;\nusing IgniteUI.Blazor.Controls; // for registering Ignite UI modules\n\nnamespace Infragistics.Samples\n{\n    public class Program\n    {\n        public static async Task Main(string[] args)\n        {\n            var builder = WebAssemblyHostBuilder.CreateDefault(args);\n            builder.RootComponents.Add<App>(\"app\");\n            builder.Services.AddScoped(sp => new HttpClient { BaseAddress = new Uri(builder.HostEnvironment.BaseAddress) });\n            // registering Ignite UI modules\n            builder.Services.AddIgniteUIBlazor(\n                typeof(IgbDataChartCoreModule),\n                typeof(IgbDataChartShapeCoreModule),\n                typeof(IgbDataChartShapeModule),\n                typeof(IgbDataChartInteractivityModule),\n                typeof(IgbScatterPolygonSeriesModule)\n);\n            await builder.Build().RunAsync();\n        }\n    }\n}",
    "isMain": true,
    "fileExtension": "cs",
    "fileHeader": "MODULES"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/data-chart/type-scatter-polygon-series/wwwroot/DataChartTypeScatterPolygonStyles.js",
    "content": "ï»¿function onPolygonShapeStyle(o, e) {\r\n\r\n    e.shapeOpacity = 1.0;\r\n    e.shapeStrokeThickness = 0.5;\r\n    e.shapeStroke = 'Black';\r\n\r\n    var dataItem = e.item;\r\n    if (dataItem.Class === 'First') {\r\n        e.shapeFill = 'DodgerBlue';\r\n    }\r\n    if (dataItem.Class === 'Business') {\r\n        e.shapeFill = 'LimeGreen';\r\n    }\r\n    if (dataItem.Class === 'Premium') {\r\n        e.shapeFill = 'Orange';\r\n    }\r\n    if (dataItem.Class === 'Economy') {\r\n        e.shapeFill = 'Red';\r\n    }\r\n\r\n    if (dataItem.Status === 'Sold') {\r\n        e.shapeFill = 'Gray';\r\n    }\r\n}\r\nigRegisterScript(\"onPolygonShapeStyle\", onPolygonShapeStyle, false);\r\n\r\nfunction onPolygonSeriesMouseEnter(o, e) {\r\n    if (e.series.title !== \"AirplaneSeats\") return;\r\n\r\n    if (e.series.tooltipTemplate === null ||\r\n        e.series.tooltipTemplate === undefined) {\r\n        e.series.tooltipTemplate = createPolygonSeriesTooltip;\r\n        console.log(\"onPolygonSeriesMouseEnter \");\r\n    }\r\n}\r\nigRegisterScript(\"onPolygonSeriesMouseEnter\", onPolygonSeriesMouseEnter, false);\r\n\r\nfunction createPolygonSeriesTooltip(context) {\r\n\r\n    if (!context) return null;\r\n\r\n    var dataItem = context.item;\r\n    if (!dataItem) return null;\r\n\r\n    var tooltip = document.createElement(\"div\");\r\n    tooltip.className = \"ui-tooltip-content\";\r\n\r\n    var itemClass = document.createElement(\"div\");\r\n    itemClass.innerHTML = \"Class: \" + dataItem.Class;\r\n    //itemClass.style.color = \"black\";\r\n    tooltip.appendChild(itemClass);\r\n\r\n    var itemSeat = document.createElement(\"div\");\r\n    itemSeat.innerHTML = \"Seat: \" + dataItem.Seat;\r\n    tooltip.appendChild(itemSeat);\r\n\r\n    var itemPrice = document.createElement(\"div\");\r\n    itemPrice.innerHTML = \"Price: $\" + dataItem.Price;\r\n    tooltip.appendChild(itemPrice);\r\n\r\n    var itemStatus = document.createElement(\"div\");\r\n    itemStatus.innerHTML = \"Status: \" + dataItem.Status;\r\n    tooltip.appendChild(itemStatus);\r\n\r\n    return tooltip;\r\n}",
    "isMain": true,
    "fileExtension": "js",
    "fileHeader": "js"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/data-chart/type-scatter-polygon-series/wwwroot/index.css",
    "content": "/* \r\nCSS styles are loaded from the shared CSS file located at:\r\nhttps://static.infragistics.com/xplatform/css/samples/\r\n*/",
    "isMain": true,
    "fileExtension": "css",
    "fileHeader": "css"
  }
]
}