{
 "sampleFiles":
[
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/data-chart/financial-price-series/App.razor",
    "content": "\n@using IgniteUI.Blazor.Controls\n\n<div class=\"container vertical\">\n\n    <div class=\"container vertical fill\">\n        <IgbDataChart\n        Name=\"chart\"\n        @ref=\"chart\"\n        ShouldAutoExpandMarginForInitialLabels=\"true\"\n        ComputedPlotAreaMarginMode=\"ComputedPlotAreaMarginMode.Series\"\n        IsVerticalZoomEnabled=\"true\"\n        IsHorizontalZoomEnabled=\"true\">\n            <IgbCategoryXAxis\n            Name=\"xAxis\"\n            @ref=\"xAxis\"\n            DataSource=\"Stock2Years\"\n            LabelLocation=\"AxisLabelsLocation.OutsideBottom\"\n            Label=\"Month\"\n            Interval=\"1\"\n            LabelExtent=\"30\">\n            </IgbCategoryXAxis>\n\n            <IgbNumericYAxis\n            Name=\"yAxis\"\n            @ref=\"yAxis\"\n            LabelLocation=\"AxisLabelsLocation.OutsideRight\">\n            </IgbNumericYAxis>\n\n            <IgbFinancialPriceSeries\n            Name=\"Series1\"\n            @ref=\"series1\"\n            Title=\"Stock Price\"\n            DisplayType=\"PriceDisplayType.Candlestick\"\n            XAxisName=\"xAxis\"\n            YAxisName=\"yAxis\"\n            DataSource=\"Stock2Years\"\n            OpenMemberPath=\"Open\"\n            HighMemberPath=\"High\"\n            LowMemberPath=\"Low\"\n            CloseMemberPath=\"Close\"\n            VolumeMemberPath=\"Volume\"\n            ShowDefaultTooltip=\"true\">\n            </IgbFinancialPriceSeries>\n\n            <IgbDataToolTipLayer\n            Name=\"Tooltip\"\n            @ref=\"tooltip\">\n            </IgbDataToolTipLayer>\n\n        </IgbDataChart>\n\n    </div>\n</div>\n\n@code {\n    \n\n    protected override async Task OnAfterRenderAsync(bool firstRender)\n    {\n        var chart = this.chart;\n        var xAxis = this.xAxis;\n        var yAxis = this.yAxis;\n        var series1 = this.series1;\n        var tooltip = this.tooltip;\n\n    }\n\n    private IgbDataChart chart;\n    private IgbCategoryXAxis xAxis;\n    private IgbNumericYAxis yAxis;\n    private IgbFinancialPriceSeries series1;\n    private IgbDataToolTipLayer tooltip;\n\n    private Stock2Years _stock2Years = null;\n    public Stock2Years Stock2Years\n    {\n        get\n        {\n            if (_stock2Years == null)\n            {\n                _stock2Years = new Stock2Years();\n            }\n            return _stock2Years;\n        }\n    }\n\n}",
    "isMain": true,
    "fileExtension": "razor",
    "fileHeader": "razor"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/data-chart/financial-price-series/Program.cs",
    "content": "using System;\nusing System.Net.Http;\nusing System.Collections.Generic;\nusing System.Threading.Tasks;\nusing System.Text;\nusing Microsoft.AspNetCore.Components.WebAssembly.Hosting;\nusing Microsoft.Extensions.Configuration;\nusing Microsoft.Extensions.DependencyInjection;\nusing Microsoft.Extensions.Logging;\nusing IgniteUI.Blazor.Controls; // for registering Ignite UI modules\n\nnamespace Infragistics.Samples\n{\n    public class Program\n    {\n        public static async Task Main(string[] args)\n        {\n            var builder = WebAssemblyHostBuilder.CreateDefault(args);\n            builder.RootComponents.Add<App>(\"app\");\n            builder.Services.AddScoped(sp => new HttpClient { BaseAddress = new Uri(builder.HostEnvironment.BaseAddress) });\n            // registering Ignite UI modules\n            builder.Services.AddIgniteUIBlazor(\n                typeof(IgbDataChartCoreModule),\n                typeof(IgbDataChartCategoryModule),\n                typeof(IgbDataChartCategoryCoreModule),\n                typeof(IgbDataChartFinancialCoreModule),\n                typeof(IgbDataChartFinancialModule),\n                typeof(IgbDataChartFinancialOverlaysModule),\n                typeof(IgbDataChartInteractivityModule),\n                typeof(IgbDataChartAnnotationModule)\n            );\n            await builder.Build().RunAsync();\n        }\n    }\n}",
    "isMain": true,
    "fileExtension": "cs",
    "fileHeader": "MODULES"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/data-chart/financial-price-series/Stock2Years.cs",
    "content": "using System;\nusing System.Collections.Generic;\npublic class Stock2YearsItem\n{\n    public string Month { get; set; }\n    public double Open { get; set; }\n    public double High { get; set; }\n    public double Low { get; set; }\n    public double Close { get; set; }\n    public double Volume { get; set; }\n}\n\npublic class Stock2Years\n    : List<Stock2YearsItem>\n{\n    public Stock2Years()\n    {\n        this.Add(new Stock2YearsItem()\n        {\n            Month = @\"2020\",\n            Open = 41.1,\n            High = 41.6,\n            Low = 41.1,\n            Close = 41.4,\n            Volume = 32610\n        });\n        this.Add(new Stock2YearsItem()\n        {\n            Month = @\"FEB\",\n            Open = 41.4,\n            High = 41.7,\n            Low = 41.2,\n            Close = 41.4,\n            Volume = 28666\n        });\n        this.Add(new Stock2YearsItem()\n        {\n            Month = @\"MAR\",\n            Open = 41.3,\n            High = 41.3,\n            Low = 40.7,\n            Close = 41,\n            Volume = 30139\n        });\n        this.Add(new Stock2YearsItem()\n        {\n            Month = @\"APR\",\n            Open = 41.3,\n            High = 41.4,\n            Low = 39.6,\n            Close = 39.9,\n            Volume = 51409\n        });\n        this.Add(new Stock2YearsItem()\n        {\n            Month = @\"MAY\",\n            Open = 40,\n            High = 40.3,\n            Low = 39.7,\n            Close = 39.8,\n            Volume = 37559\n        });\n        this.Add(new Stock2YearsItem()\n        {\n            Month = @\"JUN\",\n            Open = 39.8,\n            High = 39.9,\n            Low = 39.2,\n            Close = 39.8,\n            Volume = 35919\n        });\n        this.Add(new Stock2YearsItem()\n        {\n            Month = @\"JUL\",\n            Open = 39.9,\n            High = 40.5,\n            Low = 39.9,\n            Close = 40.5,\n            Volume = 27398\n        });\n        this.Add(new Stock2YearsItem()\n        {\n            Month = @\"AUG\",\n            Open = 40.4,\n            High = 40.7,\n            Low = 39.1,\n            Close = 39.4,\n            Volume = 45960\n        });\n        this.Add(new Stock2YearsItem()\n        {\n            Month = @\"SEP\",\n            Open = 39,\n            High = 39.8,\n            Low = 39,\n            Close = 39.2,\n            Volume = 34333\n        });\n        this.Add(new Stock2YearsItem()\n        {\n            Month = @\"OCT\",\n            Open = 39.1,\n            High = 39.4,\n            Low = 38.9,\n            Close = 39.2,\n            Volume = 32006\n        });\n        this.Add(new Stock2YearsItem()\n        {\n            Month = @\"NOV\",\n            Open = 39.3,\n            High = 40,\n            Low = 39,\n            Close = 39.8,\n            Volume = 33978\n        });\n        this.Add(new Stock2YearsItem()\n        {\n            Month = @\"DEC\",\n            Open = 40.1,\n            High = 40.4,\n            Low = 39.9,\n            Close = 40.4,\n            Volume = 30616\n        });\n        this.Add(new Stock2YearsItem()\n        {\n            Month = @\"2021\",\n            Open = 40,\n            High = 40.2,\n            Low = 39.5,\n            Close = 40,\n            Volume = 36689\n        });\n        this.Add(new Stock2YearsItem()\n        {\n            Month = @\"FEB\",\n            Open = 40.1,\n            High = 40.1,\n            Low = 39.8,\n            Close = 39.9,\n            Volume = 22222\n        });\n        this.Add(new Stock2YearsItem()\n        {\n            Month = @\"MAR\",\n            Open = 40,\n            High = 40.1,\n            Low = 39.8,\n            Close = 40,\n            Volume = 27057\n        });\n        this.Add(new Stock2YearsItem()\n        {\n            Month = @\"APR\",\n            Open = 40,\n            High = 40,\n            Low = 39.5,\n            Close = 39.7,\n            Volume = 24602\n        });\n        this.Add(new Stock2YearsItem()\n        {\n            Month = @\"MAY\",\n            Open = 39.7,\n            High = 40,\n            Low = 39.3,\n            Close = 39.9,\n            Volume = 42381\n        });\n        this.Add(new Stock2YearsItem()\n        {\n            Month = @\"JUN\",\n            Open = 40.3,\n            High = 40.7,\n            Low = 39.8,\n            Close = 39.9,\n            Volume = 56883\n        });\n        this.Add(new Stock2YearsItem()\n        {\n            Month = @\"JUL\",\n            Open = 40.1,\n            High = 41.3,\n            Low = 40.1,\n            Close = 40.9,\n            Volume = 50610\n        });\n        this.Add(new Stock2YearsItem()\n        {\n            Month = @\"AUG\",\n            Open = 41.1,\n            High = 41.2,\n            Low = 40.4,\n            Close = 40.5,\n            Volume = 29637\n        });\n        this.Add(new Stock2YearsItem()\n        {\n            Month = @\"SEP\",\n            Open = 39,\n            High = 39.8,\n            Low = 39,\n            Close = 39.2,\n            Volume = 34333\n        });\n        this.Add(new Stock2YearsItem()\n        {\n            Month = @\"OCT\",\n            Open = 39.1,\n            High = 39.4,\n            Low = 38.9,\n            Close = 39.2,\n            Volume = 32006\n        });\n        this.Add(new Stock2YearsItem()\n        {\n            Month = @\"NOV\",\n            Open = 39.3,\n            High = 40,\n            Low = 39,\n            Close = 39.8,\n            Volume = 33978\n        });\n        this.Add(new Stock2YearsItem()\n        {\n            Month = @\"DEC\",\n            Open = 40.1,\n            High = 40.4,\n            Low = 39.9,\n            Close = 40.4,\n            Volume = 30616\n        });\n    }\n}",
    "isMain": true,
    "fileExtension": "cs",
    "fileHeader": "DATA"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/data-chart/financial-price-series/wwwroot/index.css",
    "content": "/*\r\nCSS styles are loaded from the shared CSS file located at:\r\nhttps://static.infragistics.com/xplatform/css/samples/\r\n*/",
    "isMain": true,
    "fileExtension": "css",
    "fileHeader": "css"
  }
]
}