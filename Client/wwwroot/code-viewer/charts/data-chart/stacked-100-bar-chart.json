{
 "sampleFiles":
[
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/data-chart/stacked-100-bar-chart/App.razor",
    "content": "\n@using IgniteUI.Blazor.Controls\n\n<div class=\"container vertical\">\n    <div class=\"legend-title\">\n        Renewable Energy Consumption\n    </div>\n    <div class=\"legend\">\n        <IgbLegend\n        Name=\"Legend\"\n        @ref=\"legend\"\n        Orientation=\"LegendOrientation.Horizontal\">\n        </IgbLegend>\n\n    </div>\n\n    <div class=\"container vertical fill\">\n        <IgbDataChart\n        Name=\"chart\"\n        @ref=\"chart\"\n        IsHorizontalZoomEnabled=\"false\"\n        IsVerticalZoomEnabled=\"false\">\n            <IgbCategoryYAxis\n            Name=\"yAxis\"\n            @ref=\"yAxis\"\n            DataSource=\"EnergyRenewableConsumption\"\n            Label=\"Location\"\n            IsInverted=\"true\">\n            </IgbCategoryYAxis>\n\n            <IgbNumericXAxis\n            Name=\"xAxis\"\n            @ref=\"xAxis\"\n            MinimumValue=\"0\"\n            Title=\"TWh\">\n            </IgbNumericXAxis>\n\n            <IgbStacked100BarSeries\n            Name=\"Stacked100BarSeries\"\n            @ref=\"stacked100BarSeries\"\n            DataSource=\"EnergyRenewableConsumption\"\n            XAxisName=\"xAxis\"\n            YAxisName=\"yAxis\"\n            ShowDefaultTooltip=\"true\"\n            AreaFillOpacity=\"1\">\n                <IgbStackedFragmentSeries\n                Name=\"s1\"\n                @ref=\"s1\"\n                ValueMemberPath=\"Hydro\"\n                Title=\"@(\"Hydro\")\">\n                </IgbStackedFragmentSeries>\n\n                <IgbStackedFragmentSeries\n                Name=\"s2\"\n                @ref=\"s2\"\n                ValueMemberPath=\"Wind\"\n                Title=\"@(\"Wind\")\">\n                </IgbStackedFragmentSeries>\n\n                <IgbStackedFragmentSeries\n                Name=\"s3\"\n                @ref=\"s3\"\n                ValueMemberPath=\"Solar\"\n                Title=\"@(\"Solar\")\">\n                </IgbStackedFragmentSeries>\n\n                <IgbStackedFragmentSeries\n                Name=\"s4\"\n                @ref=\"s4\"\n                ValueMemberPath=\"Other\"\n                Title=\"@(\"Other\")\">\n                </IgbStackedFragmentSeries>\n\n            </IgbStacked100BarSeries>\n\n            <IgbDataToolTipLayer\n            Name=\"DataToolTipLayer\"\n            @ref=\"dataToolTipLayer\">\n            </IgbDataToolTipLayer>\n\n        </IgbDataChart>\n\n    </div>\n</div>\n\n@code {\n    \n\n    private Action BindElements { get; set; }\n\n    protected override async Task OnAfterRenderAsync(bool firstRender)\n    {\n        var legend = this.legend;\n        var chart = this.chart;\n        var yAxis = this.yAxis;\n        var xAxis = this.xAxis;\n        var stacked100BarSeries = this.stacked100BarSeries;\n        var s1 = this.s1;\n        var s2 = this.s2;\n        var s3 = this.s3;\n        var s4 = this.s4;\n        var dataToolTipLayer = this.dataToolTipLayer;\n\n        this.BindElements = () => {\n            chart.Legend = this.legend;\n        };\n        this.BindElements();\n\n    }\n\n    private IgbLegend legend;\n    private IgbDataChart chart;\n    private IgbCategoryYAxis yAxis;\n    private IgbNumericXAxis xAxis;\n    private IgbStacked100BarSeries stacked100BarSeries;\n    private IgbStackedFragmentSeries s1;\n    private IgbStackedFragmentSeries s2;\n    private IgbStackedFragmentSeries s3;\n    private IgbStackedFragmentSeries s4;\n    private IgbDataToolTipLayer dataToolTipLayer;\n\n    private EnergyRenewableConsumption _energyRenewableConsumption = null;\n    public EnergyRenewableConsumption EnergyRenewableConsumption\n    {\n        get\n        {\n            if (_energyRenewableConsumption == null)\n            {\n                _energyRenewableConsumption = new EnergyRenewableConsumption();\n            }\n            return _energyRenewableConsumption;\n        }\n    }\n\n}",
    "isMain": true,
    "fileExtension": "razor",
    "fileHeader": "razor"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/data-chart/stacked-100-bar-chart/EnergyRenewableConsumption.cs",
    "content": "using System;\nusing System.Collections.Generic;\npublic class EnergyRenewableConsumptionItem\n{\n    public string Location { get; set; }\n    public double Year { get; set; }\n    public double Hydro { get; set; }\n    public double Solar { get; set; }\n    public double Wind { get; set; }\n    public double Other { get; set; }\n}\n\npublic class EnergyRenewableConsumption\n    : List<EnergyRenewableConsumptionItem>\n{\n    public EnergyRenewableConsumption()\n    {\n        this.Add(new EnergyRenewableConsumptionItem()\n        {\n            Location = @\"China\",\n            Year = 2019,\n            Hydro = 1269.5,\n            Solar = 223,\n            Wind = 405.2,\n            Other = 102.8\n        });\n        this.Add(new EnergyRenewableConsumptionItem()\n        {\n            Location = @\"Europe\",\n            Year = 2019,\n            Hydro = 632.54,\n            Solar = 154,\n            Wind = 461.3,\n            Other = 220.3\n        });\n        this.Add(new EnergyRenewableConsumptionItem()\n        {\n            Location = @\"USA\",\n            Year = 2019,\n            Hydro = 271.16,\n            Solar = 108,\n            Wind = 303.4,\n            Other = 78.34\n        });\n        this.Add(new EnergyRenewableConsumptionItem()\n        {\n            Location = @\"Brazil\",\n            Year = 2019,\n            Hydro = 399.3,\n            Solar = 5.5,\n            Wind = 55.83,\n            Other = 56.25\n        });\n        this.Add(new EnergyRenewableConsumptionItem()\n        {\n            Location = @\"Canada\",\n            Year = 2019,\n            Hydro = 381.98,\n            Solar = 4.3,\n            Wind = 34.17,\n            Other = 10.81\n        });\n    }\n}",
    "isMain": true,
    "fileExtension": "cs",
    "fileHeader": "DATA"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/data-chart/stacked-100-bar-chart/Program.cs",
    "content": "using System;\nusing System.Net.Http;\nusing System.Collections.Generic;\nusing System.Threading.Tasks;\nusing System.Text;\nusing Microsoft.AspNetCore.Components.WebAssembly.Hosting;\nusing Microsoft.Extensions.Configuration;\nusing Microsoft.Extensions.DependencyInjection;\nusing Microsoft.Extensions.Logging;\nusing IgniteUI.Blazor.Controls; // for registering Ignite UI modules\n\nnamespace Infragistics.Samples\n{\n    public class Program\n    {\n        public static async Task Main(string[] args)\n        {\n            var builder = WebAssemblyHostBuilder.CreateDefault(args);\n            builder.RootComponents.Add<App>(\"app\");\n            builder.Services.AddScoped(sp => new HttpClient { BaseAddress = new Uri(builder.HostEnvironment.BaseAddress) });\n            // registering Ignite UI modules\n            builder.Services.AddIgniteUIBlazor(\n                typeof(IgbLegendModule),\n                typeof(IgbDataChartCoreModule),\n                typeof(IgbDataChartCategoryModule),\n                typeof(IgbDataChartCategoryCoreModule),\n                typeof(IgbDataChartInteractivityModule),\n                typeof(IgbDataChartAnnotationModule),\n                typeof(IgbDataChartStackedModule),\n                typeof(IgbStackedFragmentSeriesModule)\n            );\n            await builder.Build().RunAsync();\n        }\n    }\n}",
    "isMain": true,
    "fileExtension": "cs",
    "fileHeader": "MODULES"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/data-chart/stacked-100-bar-chart/wwwroot/index.css",
    "content": "/*\r\nCSS styles are loaded from the shared CSS file located at:\r\nhttps://static.infragistics.com/xplatform/css/samples/\r\n*/",
    "isMain": true,
    "fileExtension": "css",
    "fileHeader": "css"
  }
]
}