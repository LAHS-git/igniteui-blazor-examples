{
 "sampleFiles":
[
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/data-chart/axis-sharing/App.razor",
    "content": "\n@using IgniteUI.Blazor.Controls\n\n<div class=\"container vertical\">\n    <div class=\"container vertical\">\n        @if (Data != null)\n        {\n            <IgbDataChart Height=\"100%\" Width=\"100%\"\n                       Subtitle=\"Stock Prices and Trade Volume\"\n                       SubtitleTopMargin=\"10\"\n                       IsHorizontalZoomEnabled=\"true\"\n                       IsVerticalZoomEnabled=\"true\">\n                <IgbCategoryXAxis Name=\"xAxisShared\" Label=\"Label\" Gap=\"0.75\" DataSource=\"Data\" />\n                <IgbNumericYAxis Name=\"yAxisRight\" LabelLocation=\"AxisLabelsLocation.OutsideRight\"\n                                 MinimumValue=\"400\"\n                                 MaximumValue=\"700\" Title=\"Stock Price ($)\" />\n                <IgbNumericYAxis Name=\"yAxisLeft\" LabelLocation=\"AxisLabelsLocation.OutsideLeft\"\n                                 MinimumValue=\"5000\"\n                                 MaximumValue=\"45000\" Title=\"Trade Volume\"\n                                 MajorStrokeThickness=\"0\"\n                                 AbbreviateLargeNumbers=\"true\" />\n\n                <IgbColumnSeries XAxisName=\"xAxisShared\"\n                                 YAxisName=\"yAxisLeft\"\n                                 DataSource=\"Data\"\n                                 ValueMemberPath=\"Volume\"\n                                 ShowDefaultTooltip=\"true\"\n                                 Title=\"Trade Volume\" />\n\n                <IgbFinancialPriceSeries XAxisName=\"xAxisShared\"\n                                         YAxisName=\"yAxisRight\"\n                                         DisplayType=\"PriceDisplayType.Candlestick\"\n                                         DataSource=\"Data\"\n                                         HighMemberPath=\"High\" LowMemberPath=\"Low\" CloseMemberPath=\"Close\" OpenMemberPath=\"Open\"\n                                         VolumeMemberPath=\"Volume\"\n                                         ShowDefaultTooltip=\"true\"\n                                         Title=\"Stock Price\" />\n            </IgbDataChart>\n        }\n\n    </div>\n</div>\n\n@code {\n\n    private List<SharedAxisFinancialItem> Data;\n\n    protected override void OnInitialized()\n    {\n\n        this.Data = SharedAxisFinancialData.Create();\n    }\n}",
    "isMain": true,
    "fileExtension": "razor",
    "fileHeader": "razor"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/data-chart/axis-sharing/Program.cs",
    "content": "using System;\nusing System.Net.Http;\nusing System.Collections.Generic;\nusing System.Threading.Tasks;\nusing System.Text;\nusing Microsoft.AspNetCore.Components.WebAssembly.Hosting;\nusing Microsoft.Extensions.Configuration;\nusing Microsoft.Extensions.DependencyInjection;\nusing Microsoft.Extensions.Logging;\nusing IgniteUI.Blazor.Controls; // for registering Ignite UI modules\n\nnamespace Infragistics.Samples\n{\n    public class Program\n    {\n        public static async Task Main(string[] args)\n        {\n            var builder = WebAssemblyHostBuilder.CreateDefault(args);\n            builder.RootComponents.Add<App>(\"app\");\n            builder.Services.AddScoped(sp => new HttpClient { BaseAddress = new Uri(builder.HostEnvironment.BaseAddress) });\n            // registering Ignite UI modules\n            builder.Services.AddIgniteUIBlazor(\n                typeof(IgbDataChartCoreModule),\n                typeof(IgbDataChartCategoryModule),\n                typeof(IgbDataChartInteractivityModule),\n                typeof(IgbFinancialPriceSeriesModule),\n                typeof(IgbNumberAbbreviatorModule),\n                typeof(IgbColumnSeriesModule)\n            );\n            await builder.Build().RunAsync();\n        }\n    }\n}",
    "isMain": true,
    "fileExtension": "cs",
    "fileHeader": "MODULES"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/data-chart/axis-sharing/Services/SharedAxisFinancialData.cs",
    "content": "ï»¿using System;\nusing System.Collections.Generic;\n\nnamespace Infragistics.Samples\n{\n    public class SharedAxisFinancialData\n    {\n        public static Random random = new Random();\n        public static List<SharedAxisFinancialItem> Create(int itemsCount = 400)\n        {\n            var data = new List<SharedAxisFinancialItem>();\n\n            // initial values\n            var v = 10000.0;\n            var o = 500.0;\n            var h = Math.Round(o + (random.NextDouble() * 5));\n            var l = Math.Round(o - (random.NextDouble() * 5));\n            var c = Math.Round(l + (random.NextDouble() * (h - l)));\n\n            var today = DateTime.Now;\n            var end = new DateTime(today.Year, today.Month, today.Day);\n            var time = end.AddDays(-itemsCount);\n\n            for (var i = 0; i < itemsCount; i++)\n            {\n                var date = time.ToShortDateString();\n                var label = GetShortDate(time, false);\n                // adding new data item\n                var item = new SharedAxisFinancialItem();\n                item.Time = time;\n                item.Date = date;\n                item.Label = label;\n                item.Close = c;\n                item.Open = o;\n                item.High = h;\n                item.Low = l;\n                item.Volume = v;\n                data.Add(item);\n\n                // generating new values\n                var mod = random.NextDouble() - 0.49;\n                o = Math.Round(o + (mod * 20));\n                o = Math.Max(o, 500);\n                o = Math.Min(o, 675);\n\n                v = Math.Round(v + (mod * 500));\n                h = Math.Round(o + (random.NextDouble() * 15));\n                l = Math.Round(o - (random.NextDouble() * 15));\n                c = Math.Round(l + (random.NextDouble() * (h - l)));\n                time = time.AddDays(1);\n            }\n            return data;\n        }\n\n        public static string GetShortDate(DateTime dt, bool showYear)\n        {\n            var months = new List<string> {\n                \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n            };\n            var ind = dt.Month - 1;\n            var day = dt.Day;\n            var label = months[ind] + \" \" + day;\n            if (showYear)\n            {\n                label += \" \" + dt.Year;\n            }\n            return label;\n        }\n    }\n\n    public class SharedAxisFinancialItem\n    {\n        public double High { get; set; }\n        public double Low { get; set; }\n        public double Open { get; set; }\n        public double Close { get; set; }\n        public double Volume { get; set; }\n\n        public string Label { get; set; }\n        public string Date { get; set; }\n        public DateTime Time { get; set; }\n    }\n}",
    "isMain": true,
    "fileExtension": "cs",
    "fileHeader": "DATA"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/data-chart/axis-sharing/wwwroot/index.css",
    "content": "/* \r\nCSS styles are loaded from the shared CSS file located at:\r\nhttps://static.infragistics.com/xplatform/css/samples/\r\n*/",
    "isMain": true,
    "fileExtension": "css",
    "fileHeader": "css"
  }
]
}