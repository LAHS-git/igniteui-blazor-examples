{
 "sampleFiles":
[
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/data-chart/polar-chart-types/App.razor",
    "content": "\n@using IgniteUI.Blazor.Controls\n\n<div class=\"container vertical\">\n\n    <div class=\"options vertical\">\n        <span class=\"legend-title\">Points of Sail Chart </span>\n        <div class=\"legend\">\n            <IgbLegend @ref=\"Legend\" Orientation=\"LegendOrientation.Horizontal\" />\n        </div>\n    </div>\n\n    <div class=\"overlay-right\" style=\"margin-right: 1rem\">\n         <label class=\"options-label\">Type of Polar Chart </label>\n         <select value=@SeriesType @onchange=\"OnSeriesTypeChanged\">\n             <option>Polar Area Chart</option>\n             <option>Polar Spline Chart</option>\n             <option>Polar Line Chart</option>\n             <option>Polar Scatter Chart</option>\n         </select>\n    </div>\n\n    <div class=\"container vertical\">\n        @if (Data != null)\n        {\n        <IgbDataChart Height=\"100%\" Width=\"100%\"\n                   TitleTopMargin=\"10\"\n                   IsHorizontalZoomEnabled=\"false\"\n                   IsVerticalZoomEnabled=\"false\"\n                   Legend=\"Legend\"\n                   @ref=\"Chart\">\n\n            <IgbNumericAngleAxis Name=\"angleAxis\"\n                              StartAngleOffset=\"-90\"\n                              Interval=\"30\"\n                              MinimumValue=\"0\"\n                              MaximumValue=\"360\" />\n            <IgbNumericRadiusAxis Name=\"radiusAxis\"\n                               InnerRadiusExtentScale=\"0.1\"\n                               RadiusExtentScale=\"0.9\"\n                               MinimumValue=\"0\"\n                               MaximumValue=\"100\"\n                               Interval=\"25\" />\n\n            @if (SeriesType == \"Polar Area Chart\")\n            {\n                <IgbPolarAreaSeries DataSource=\"Data\"\n                                 AngleAxisName=\"angleAxis\"\n                                 AngleMemberPath=\"Direction\"\n                                 RadiusMemberPath=\"WindSpeed\"\n                                 RadiusAxisName=\"radiusAxis\"\n                                 ShowDefaultTooltip=\"true\"\n                                 Title=\"Wind Speed\"\n                                 MarkerType=\"MarkerType.Circle\" />\n                <IgbPolarAreaSeries DataSource=\"Data\"\n                                 AngleAxisName=\"angleAxis\"\n                                 AngleMemberPath=\"Direction\"\n                                 RadiusMemberPath=\"BoatSpeed\"\n                                 RadiusAxisName=\"radiusAxis\"\n                                 ShowDefaultTooltip=\"true\"\n                                 Title=\"Boat Speed\"\n                                 MarkerType=\"MarkerType.Circle\" />\n            }\n\n            @if (SeriesType == \"Polar Spline Chart\")\n            {\n                <IgbPolarSplineSeries AngleMemberPath=\"Direction\"\n                                   RadiusMemberPath=\"BoatSpeed\"\n                                   RadiusAxisName=\"radiusAxis\"\n                                   AngleAxisName=\"angleAxis\"\n                                   MarkerType=\"MarkerType.Circle\"\n                                   Title=\"Boat Speed\"\n                                   DataSource=\"Data\">\n                </IgbPolarSplineSeries>\n                <IgbPolarSplineSeries AngleMemberPath=\"Direction\"\n                                   RadiusMemberPath=\"WindSpeed\"\n                                   RadiusAxisName=\"radiusAxis\"\n                                   AngleAxisName=\"angleAxis\"\n                                   MarkerType=\"MarkerType.Circle\"\n                                   Title=\"Wind Speed\"\n                                   DataSource=\"Data\">\n                </IgbPolarSplineSeries>\n            }\n\n            @if (SeriesType == \"Polar Line Chart\")\n            {\n                <IgbPolarLineSeries AngleMemberPath=\"Direction\"\n                                 RadiusMemberPath=\"BoatSpeed\"\n                                 RadiusAxisName=\"radiusAxis\"\n                                 AngleAxisName=\"angleAxis\"\n                                 MarkerType=\"MarkerType.Circle\"\n                                 Title=\"Boat Speed\"\n                                 DataSource=\"Data\">\n                </IgbPolarLineSeries>\n                <IgbPolarLineSeries AngleMemberPath=\"Direction\"\n                                 RadiusMemberPath=\"WindSpeed\"\n                                 RadiusAxisName=\"radiusAxis\"\n                                 AngleAxisName=\"angleAxis\"\n                                 MarkerType=\"MarkerType.Circle\"\n                                 Title=\"Wind Speed\"\n                                 DataSource=\"Data\">\n                </IgbPolarLineSeries>\n            }\n\n            @if (SeriesType == \"Polar Scatter Chart\")\n            {\n                <IgbPolarScatterSeries AngleMemberPath=\"Direction\"\n                        RadiusMemberPath=\"BoatSpeed\"\n                        RadiusAxisName=\"radiusAxis\"\n                        AngleAxisName=\"angleAxis\"\n                        MarkerType=\"MarkerType.Circle\"\n                        Title=\"Boat Speed\"\n                        DataSource=\"Data\">\n                </IgbPolarScatterSeries>\n                <IgbPolarScatterSeries AngleMemberPath=\"Direction\"\n                        RadiusMemberPath=\"WindSpeed\"\n                        RadiusAxisName=\"radiusAxis\"\n                        AngleAxisName=\"angleAxis\"\n                        MarkerType=\"MarkerType.Circle\"\n                        Title=\"Wind Speed\"\n                        DataSource=\"Data\">\n                </IgbPolarScatterSeries>\n            }\n        </IgbDataChart>\n        }\n    </div>\n</div>\n\n@code {\n\n    private List<SamplePolarItem> Data;\n    private IgbDataChart _chart;\n    private IgbDataChart Chart\n    {\n        get { return _chart; }\n        set { _chart = value; StateHasChanged(); }\n    }\n\n    private IgbLegend _legend;\n    private IgbLegend Legend\n    {\n        get { return _legend; }\n        set { _legend = value; StateHasChanged(); }\n    }\n\n    private string seriesType = \"Polar Spline Chart\";\n    private string SeriesType\n    {\n        get { return seriesType; }\n        set { seriesType = value; StateHasChanged(); }\n    }\n\n    protected override void OnInitialized()\n    {\n\n        Data = SamplePolarData.Create();\n    }\n\n    public void OnSeriesTypeChanged(ChangeEventArgs e)\n    {\n        var selectedSeries = e.Value.ToString();\n        SeriesType = selectedSeries;\n    }\n}",
    "isMain": true,
    "fileExtension": "razor",
    "fileHeader": "razor"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/data-chart/polar-chart-types/Program.cs",
    "content": "using System;\nusing System.Net.Http;\nusing System.Collections.Generic;\nusing System.Threading.Tasks;\nusing System.Text;\nusing Microsoft.AspNetCore.Components.WebAssembly.Hosting;\nusing Microsoft.Extensions.Configuration;\nusing Microsoft.Extensions.DependencyInjection;\nusing Microsoft.Extensions.Logging;\nusing IgniteUI.Blazor.Controls; // for registering Ignite UI modules\n\nnamespace Infragistics.Samples\n{\n    public class Program\n    {\n        public static async Task Main(string[] args)\n        {\n            var builder = WebAssemblyHostBuilder.CreateDefault(args);\n            builder.RootComponents.Add<App>(\"app\");\n            builder.Services.AddScoped(sp => new HttpClient { BaseAddress = new Uri(builder.HostEnvironment.BaseAddress) });\n            // registering Ignite UI modules\n            builder.Services.AddIgniteUIBlazor(\n                typeof(IgbDataChartCoreModule),\n                typeof(IgbDataChartPolarCoreModule),\n                typeof(IgbDataChartPolarModule),\n                typeof(IgbDataChartInteractivityModule),\n                typeof(IgbLegendModule),\n                typeof(IgbPolarAreaSeriesModule),\n                typeof(IgbPolarLineSeriesModule),\n                typeof(IgbPolarSplineSeriesModule),\n                typeof(IgbPolarSplineAreaSeriesModule),\n                typeof(IgbPolarScatterSeriesModule)\n);\n            await builder.Build().RunAsync();\n        }\n    }\n}",
    "isMain": true,
    "fileExtension": "cs",
    "fileHeader": "MODULES"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/data-chart/polar-chart-types/Services/SamplePolarData.cs",
    "content": "ï»¿using System;\nusing System.Collections.Generic;\n\nnamespace Infragistics.Samples\n{\n    public class SamplePolarData\n    {\n        public static List<SamplePolarItem> Create()\n        {\n            var data = new List<SamplePolarItem>() {\n                new SamplePolarItem { Direction= 0,   BoatSpeed= 70,  WindSpeed= 90 },\n                new SamplePolarItem { Direction= 45,  BoatSpeed= 35,  WindSpeed= 65 },\n                new SamplePolarItem { Direction= 90,  BoatSpeed= 25,  WindSpeed= 45 },\n                new SamplePolarItem { Direction= 135, BoatSpeed= 15,  WindSpeed= 25 },\n                new SamplePolarItem { Direction= 180, BoatSpeed= 0,   WindSpeed= 0  },\n                new SamplePolarItem { Direction= 225, BoatSpeed= 15,  WindSpeed= 25 },\n                new SamplePolarItem { Direction= 270, BoatSpeed= 25,  WindSpeed= 45 },\n                new SamplePolarItem { Direction= 315, BoatSpeed= 35,  WindSpeed= 65 },\n                new SamplePolarItem { Direction= 360, BoatSpeed= 70,  WindSpeed= 90 },\n            };\n            return data;\n        }\n    }\n\n    public class SamplePolarItem\n    {\n        public double WindSpeed { get; set; }\n        public double BoatSpeed { get; set; }\n        public double Direction { get; set; }\n    }\n}",
    "isMain": true,
    "fileExtension": "cs",
    "fileHeader": "DATA"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/data-chart/polar-chart-types/wwwroot/index.css",
    "content": "/* \r\nCSS styles are loaded from the shared CSS file located at:\r\nhttps://static.infragistics.com/xplatform/css/samples/\r\n*/",
    "isMain": true,
    "fileExtension": "css",
    "fileHeader": "css"
  }
]
}