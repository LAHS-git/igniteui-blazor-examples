{
 "sampleFiles":
[
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/data-chart/bar-chart-overlapping/App.razor",
    "content": "\n@using IgniteUI.Blazor.Controls\n\n<div class=\"container vertical\">\n    <div class=\"legend-title\">\n        Roadblocks Critical to Success of the Data & Analytics Team\n    </div>\n    <div class=\"legend\">\n        <IgbLegend\n        Name=\"Legend\"\n        @ref=\"legend\"\n        Orientation=\"LegendOrientation.Horizontal\">\n        </IgbLegend>\n\n    </div>\n\n    <div class=\"container vertical fill\">\n        <IgbDataChart\n        Name=\"Chart\"\n        @ref=\"chart\">\n            <IgbCategoryYAxis\n            Name=\"yAxis1\"\n            @ref=\"yAxis1\"\n            Label=\"Category\"\n            DataSource=\"RoadblocksToSuccess\"\n            Gap=\"0.25\"\n            LabelExtent=\"0\">\n            </IgbCategoryYAxis>\n\n            <IgbCategoryYAxis\n            Name=\"yAxis2\"\n            @ref=\"yAxis2\"\n            Label=\"Category\"\n            DataSource=\"RoadblocksToSuccess\"\n            Gap=\"1\"\n            LabelHorizontalAlignment=\"HorizontalAlignment.Right\">\n            </IgbCategoryYAxis>\n\n            <IgbNumericXAxis\n            Name=\"xAxis\"\n            @ref=\"xAxis\"\n            MinimumValue=\"0\"\n            MaximumValue=\"50\"\n            UseEnhancedIntervalManagement=\"true\"\n            LabelFormat=\"{0}%\"\n            StrokeThickness=\"2\"\n            Stroke=\"gray\"\n            TickLength=\"5\">\n            </IgbNumericXAxis>\n\n            <IgbCategoryHighlightLayer\n            Name=\"CategoryHighlightLayer\"\n            @ref=\"categoryHighlightLayer\">\n            </IgbCategoryHighlightLayer>\n\n            <IgbBarSeries\n            Name=\"BarSeries1\"\n            @ref=\"barSeries1\"\n            XAxisName=\"xAxis\"\n            YAxisName=\"yAxis1\"\n            Title=\"Sum of Top 3 Choices\"\n            ValueMemberPath=\"TopChoices\"\n            DataSource=\"RoadblocksToSuccess\"\n            ShowDefaultTooltip=\"true\"\n            IsTransitionInEnabled=\"true\"\n            IsHighlightingEnabled=\"true\">\n            </IgbBarSeries>\n\n            <IgbBarSeries\n            Name=\"BarSeries2\"\n            @ref=\"barSeries2\"\n            XAxisName=\"xAxis\"\n            YAxisName=\"yAxis2\"\n            Title=\"Top Choice\"\n            ValueMemberPath=\"FirstChoice\"\n            DataSource=\"RoadblocksToSuccess\"\n            ShowDefaultTooltip=\"true\"\n            IsTransitionInEnabled=\"true\"\n            IsHighlightingEnabled=\"true\">\n            </IgbBarSeries>\n\n            <IgbCalloutLayer\n            Name=\"CalloutLayer1\"\n            @ref=\"calloutLayer1\"\n            DataSource=\"RoadblocksToSuccess\"\n            YMemberPath=\"Index\"\n            XMemberPath=\"FirstChoice\"\n            LabelMemberPath=\"FirstChoiceLabel\"\n            CalloutLeaderBrush=\"#00000000\"\n            CalloutOutline=\"#00000000\"\n            CalloutBackground=\"#00000000\"\n            CalloutTextColor=\"black\"\n            CalloutStrokeThickness=\"2\"\n            CalloutPaddingTop=\"0\"\n            CalloutPositionPadding=\"0\">\n            </IgbCalloutLayer>\n\n            <IgbCalloutLayer\n            Name=\"CalloutLayer2\"\n            @ref=\"calloutLayer2\"\n            DataSource=\"RoadblocksToSuccess\"\n            YMemberPath=\"Index\"\n            XMemberPath=\"TopChoices\"\n            LabelMemberPath=\"TopChoicesLabel\"\n            CalloutLeaderBrush=\"#00000000\"\n            CalloutOutline=\"#00000000\"\n            CalloutBackground=\"#00000000\"\n            CalloutTextColor=\"black\"\n            CalloutStrokeThickness=\"2\"\n            CalloutPaddingTop=\"0\"\n            CalloutPositionPadding=\"0\">\n            </IgbCalloutLayer>\n\n            <IgbDataToolTipLayer\n            Name=\"Tooltips\"\n            @ref=\"tooltips\">\n            </IgbDataToolTipLayer>\n\n        </IgbDataChart>\n\n    </div>\n</div>\n\n@code {\n    \n\n    private Action BindElements { get; set; }\n\n    protected override async Task OnAfterRenderAsync(bool firstRender)\n    {\n        var legend = this.legend;\n        var chart = this.chart;\n        var yAxis1 = this.yAxis1;\n        var yAxis2 = this.yAxis2;\n        var xAxis = this.xAxis;\n        var categoryHighlightLayer = this.categoryHighlightLayer;\n        var barSeries1 = this.barSeries1;\n        var barSeries2 = this.barSeries2;\n        var calloutLayer1 = this.calloutLayer1;\n        var calloutLayer2 = this.calloutLayer2;\n        var tooltips = this.tooltips;\n\n        this.BindElements = () => {\n            chart.Legend = this.legend;\n        };\n        this.BindElements();\n\n    }\n\n    private IgbLegend legend;\n    private IgbDataChart chart;\n    private IgbCategoryYAxis yAxis1;\n    private IgbCategoryYAxis yAxis2;\n    private IgbNumericXAxis xAxis;\n    private IgbCategoryHighlightLayer categoryHighlightLayer;\n    private IgbBarSeries barSeries1;\n    private IgbBarSeries barSeries2;\n    private IgbCalloutLayer calloutLayer1;\n    private IgbCalloutLayer calloutLayer2;\n    private IgbDataToolTipLayer tooltips;\n\n    private RoadblocksToSuccess _roadblocksToSuccess = null;\n    public RoadblocksToSuccess RoadblocksToSuccess\n    {\n        get\n        {\n            if (_roadblocksToSuccess == null)\n            {\n                _roadblocksToSuccess = new RoadblocksToSuccess();\n            }\n            return _roadblocksToSuccess;\n        }\n    }\n\n}",
    "isMain": true,
    "fileExtension": "razor",
    "fileHeader": "razor"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/data-chart/bar-chart-overlapping/Program.cs",
    "content": "using System;\nusing System.Net.Http;\nusing System.Collections.Generic;\nusing System.Threading.Tasks;\nusing System.Text;\nusing Microsoft.AspNetCore.Components.WebAssembly.Hosting;\nusing Microsoft.Extensions.Configuration;\nusing Microsoft.Extensions.DependencyInjection;\nusing Microsoft.Extensions.Logging;\nusing IgniteUI.Blazor.Controls; // for registering Ignite UI modules\n\nnamespace Infragistics.Samples\n{\n    public class Program\n    {\n        public static async Task Main(string[] args)\n        {\n            var builder = WebAssemblyHostBuilder.CreateDefault(args);\n            builder.RootComponents.Add<App>(\"app\");\n            builder.Services.AddScoped(sp => new HttpClient { BaseAddress = new Uri(builder.HostEnvironment.BaseAddress) });\n            // registering Ignite UI modules\n            builder.Services.AddIgniteUIBlazor(\n                typeof(IgbLegendModule),\n                typeof(IgbDataChartAnnotationModule),\n                typeof(IgbDataChartCoreModule),\n                typeof(IgbDataChartCategoryCoreModule),\n                typeof(IgbDataChartCategoryModule),\n                typeof(IgbDataChartInteractivityModule),\n                typeof(IgbDataChartVerticalCategoryModule),\n                typeof(IgbDataChartAnnotationModule)\n            );\n            await builder.Build().RunAsync();\n        }\n    }\n}",
    "isMain": true,
    "fileExtension": "cs",
    "fileHeader": "MODULES"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/data-chart/bar-chart-overlapping/RoadblocksToSuccess.cs",
    "content": "using System;\nusing System.Collections.Generic;\npublic class RoadblocksToSuccessItem\n{\n    public double Index { get; set; }\n    public double FirstChoice { get; set; }\n    public double TopChoices { get; set; }\n    public string FirstChoiceLabel { get; set; }\n    public string TopChoicesLabel { get; set; }\n    public string Category { get; set; }\n}\n\npublic class RoadblocksToSuccess\n    : List<RoadblocksToSuccessItem>\n{\n    public RoadblocksToSuccess()\n    {\n        this.Add(new RoadblocksToSuccessItem()\n        {\n            Index = 0,\n            FirstChoice = 6,\n            TopChoices = 22,\n            FirstChoiceLabel = @\"6%\",\n            TopChoicesLabel = @\"22%\",\n            Category = @\"Poor Prioritization of Tasks\"\n        });\n        this.Add(new RoadblocksToSuccessItem()\n        {\n            Index = 1,\n            FirstChoice = 8,\n            TopChoices = 25,\n            FirstChoiceLabel = @\"8%\",\n            TopChoicesLabel = @\"25%\",\n            Category = @\"Poor Data Literacy\"\n        });\n        this.Add(new RoadblocksToSuccessItem()\n        {\n            Index = 2,\n            FirstChoice = 10,\n            TopChoices = 35,\n            FirstChoiceLabel = @\"10%\",\n            TopChoicesLabel = @\"35%\",\n            Category = @\"Lack of Relevant Skills\"\n        });\n        this.Add(new RoadblocksToSuccessItem()\n        {\n            Index = 3,\n            FirstChoice = 14,\n            TopChoices = 37,\n            FirstChoiceLabel = @\"14%\",\n            TopChoicesLabel = @\"37%\",\n            Category = @\"Lack of Resources\"\n        });\n        this.Add(new RoadblocksToSuccessItem()\n        {\n            Index = 4,\n            FirstChoice = 20,\n            TopChoices = 46,\n            FirstChoiceLabel = @\"20%\",\n            TopChoicesLabel = @\"46%\",\n            Category = @\"Cultural Challenges\"\n        });\n    }\n}",
    "isMain": true,
    "fileExtension": "cs",
    "fileHeader": "DATA"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/data-chart/bar-chart-overlapping/wwwroot/index.css",
    "content": "/*\r\nCSS styles are loaded from the shared CSS file located at:\r\nhttps://static.infragistics.com/xplatform/css/samples/\r\n*/",
    "isMain": true,
    "fileExtension": "css",
    "fileHeader": "css"
  }
]
}