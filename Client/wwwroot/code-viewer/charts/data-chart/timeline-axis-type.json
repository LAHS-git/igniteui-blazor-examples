{
 "sampleFiles":
[
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/data-chart/timeline-axis-type/App.razor",
    "content": "\n@using IgniteUI.Blazor.Controls\n\n<div class=\"container vertical\">\n    <IgbDataChart Height=\"100%\" Width=\"100%\"\n        @ref=\"Chart\"\n        IsHorizontalZoomEnabled=\"false\" IsVerticalZoomEnabled=\"false\"\n        ChartTitle=\"Brexit Timeline\"\n        Subtitle=\"Brexit: Key events in the process of the UK's exit from the EU\"\n        TitleTopMargin=50\n        PlotAreaMarginLeft=100\n        PlotAreaMarginRight=100>\n    </IgbDataChart>\n</div>\n\n@code {\n    \n    private List<SampleTimelineItem> CategoryData;\n    private IgbNumericYAxis NumericYAxis;\n    private IgbTimeXAxis TimeXAxis;\n    private IgbCalloutLayer CalloutLayer;\n    private IgbLineSeries LineSeries1;\n\n    private IgbDataChart _chart;\n    private IgbDataChart Chart\n    {\n        get { return _chart; }\n        set\n        {\n            _chart = value;\n            this.OnChart();\n\n            value.Axes.Add(this.TimeXAxis);\n            value.Axes.Add(this.NumericYAxis);\n            value.Series.Add(this.LineSeries1);\n            value.Series.Add(this.CalloutLayer);\n            StateHasChanged();\n        }\n    }\n\n    private void OnChart()\n    {\n        this.CategoryData = SampleTimelineData.Create();\n        this.InitAxes();\n        this.InitCategorySeries();\n    }\n\n    public void InitCategorySeries()\n    {\n        this.LineSeries1 = new IgbLineSeries()\n            {\n                Brush = \"Navy\",\n                DataSource = this.CategoryData,\n                XAxisName = \"TimeXAxis\",\n                YAxisName = \"NumericYAxis\",\n                ValueMemberPath = \"Y\",\n                Thickness = 15,\n                MarkerThickness = 15,\n                MarkerBrush = \"#EC0D00\",\n                MarkerOutline = \"#EC0D00\",\n                MarkerFillMode = MarkerFillMode.MatchMarkerOutline,\n                ShowDefaultTooltip = false,\n            };\n\n        this.CalloutLayer = new IgbCalloutLayer()\n            {\n                TargetSeries = this.LineSeries1,\n                DataSource = this.CategoryData,\n                XMemberPath = \"Date\",\n                YMemberPath = \"Y\",\n                LabelMemberPath = \"Year\",\n                IsAutoCalloutBehaviorEnabled = false,\n                UseValueForAutoCalloutLabels = false,\n                CalloutLeaderBrush = \"#EC0D00\",\n                CalloutTextColor = \"Navy\",\n                CalloutOutline = \"#EC0D00\",\n                CalloutBackground = \"Transparent\",\n                IsCalloutOffsettingEnabled = false,\n                TextStyle = \"font-size: 25px\",\n                CalloutPositionPadding = 50,\n                CalloutCollisionMode = CalloutCollisionMode.Greedy,\n                ShowDefaultTooltip = false,\n        };\n\n        this.CalloutLayer.AllowedPositions.Add(CalloutPlacementPositions.Top);\n        this.CalloutLayer.AllowedPositions.Add(CalloutPlacementPositions.TopLeft);\n        this.CalloutLayer.AllowedPositions.Add(CalloutPlacementPositions.TopRight);\n        this.CalloutLayer.AllowedPositions.Add(CalloutPlacementPositions.Bottom);\n        this.CalloutLayer.AllowedPositions.Add(CalloutPlacementPositions.BottomLeft);\n        this.CalloutLayer.AllowedPositions.Add(CalloutPlacementPositions.BottomRight);\n    }\n\n    public void InitAxes()\n    {\n        this.NumericYAxis = new IgbNumericYAxis() { Name = \"NumericYAxis\", Title = \"Numeric Y Axis\", MinimumValue=0, MaximumValue=10, LabelVisibility = Visibility.Collapsed, MajorStrokeThickness=0.0 };\n        this.TimeXAxis = new IgbTimeXAxis() { Name = \"TimeXAxis\", Title = \"Time X Axis\", DataSource = this.CategoryData, DateTimeMemberPath = \"Date\", LabelVisibility = Visibility.Collapsed };\n    }\n\n}",
    "isMain": true,
    "fileExtension": "razor",
    "fileHeader": "razor"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/data-chart/timeline-axis-type/Program.cs",
    "content": "using System;\nusing System.Net.Http;\nusing System.Collections.Generic;\nusing System.Threading.Tasks;\nusing System.Text;\nusing Microsoft.AspNetCore.Components.WebAssembly.Hosting;\nusing Microsoft.Extensions.Configuration;\nusing Microsoft.Extensions.DependencyInjection;\nusing Microsoft.Extensions.Logging;\nusing IgniteUI.Blazor.Controls; // for registering Ignite UI modules\n\nnamespace Infragistics.Samples\n{\n    public class Program\n    {\n        public static async Task Main(string[] args)\n        {\n            var builder = WebAssemblyHostBuilder.CreateDefault(args);\n            builder.RootComponents.Add<App>(\"app\");\n            builder.Services.AddScoped(sp => new HttpClient { BaseAddress = new Uri(builder.HostEnvironment.BaseAddress) });\n            // registering Ignite UI modules\n            builder.Services.AddIgniteUIBlazor(\n                 typeof(IgbDataChartCoreModule),\n                 typeof(IgbDataChartCategoryCoreModule),\n                 typeof(IgbDataChartCategoryModule),\n                 typeof(IgbDataChartVerticalCategoryModule),\n                 typeof(IgbDataChartInteractivityModule),\n                 typeof(IgbDataChartExtendedAxesModule),\n                 typeof(IgbDataChartAnnotationModule),\n                 typeof(IgbTimeXAxisModule),\n                 typeof(IgbAnnotationLayerProxyModule),\n                 typeof(IgbCalloutLayerModule)\n            );\n            await builder.Build().RunAsync();\n        }\n    }\n}",
    "isMain": true,
    "fileExtension": "cs",
    "fileHeader": "MODULES"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/data-chart/timeline-axis-type/Services/SampleTimelineData.cs",
    "content": "using System;\nusing System.Collections.Generic;\n\nnamespace Infragistics.Samples\n{\n    public class SampleTimelineData\n    {\n        public static List<SampleTimelineItem> Create() {\n            var data = new List<SampleTimelineItem>() {\n                new SampleTimelineItem { Year = \"JUN 06, 2016\", Date = new DateTime(2016, 6, 23),  Y = 5, Details = \"UK votes to exit the EU\"},\n                new SampleTimelineItem { Year = \"MAR 29, 2017\", Date = new DateTime(2017, 3, 29),  Y = 5, Details = \"The UK triggers Article 50\"},\n                new SampleTimelineItem { Year = \"JUN 19, 2017\", Date = new DateTime(2017, 6, 19),  Y = 5, Details = \"Brexit negotiations begin\"},\n                new SampleTimelineItem { Year = \"MAR 19, 2018\", Date = new DateTime(2018, 3, 19),  Y = 5, Details = \"The EU and the UK agree on a transition phase\"},\n                new SampleTimelineItem { Year = \"NOV 25, 2018\", Date = new DateTime(2018, 12, 25), Y = 5, Details = \"Draft withdrawl deal agreed\"},\n                new SampleTimelineItem { Year = \"OCT 29, 2019\", Date = new DateTime(2019, 10, 29), Y = 5, Details = \"EU heads of state and government approve postponing the Brexit date\"},\n                new SampleTimelineItem { Year = \"DEC 31, 2020\", Date = new DateTime(2020, 12, 31), Y = 5, Details = \"Transition period ends\"},\n            };\n            return data;\n        }\n    }\n\n    public class SampleTimelineItem\n    {\n        public string Details { get; set; }\n        public int X { get; set; }\n        public int Y { get; set; }\n        public string Year { get; set; }\n        public DateTime Date { get; set; }\n    }\n}",
    "isMain": true,
    "fileExtension": "cs",
    "fileHeader": "DATA"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/data-chart/timeline-axis-type/wwwroot/index.css",
    "content": "/* \r\nCSS styles are loaded from the shared CSS file located at:\r\nhttps://static.infragistics.com/xplatform/css/samples/\r\n*/",
    "isMain": true,
    "fileExtension": "css",
    "fileHeader": "css"
  }
]
}