{
 "sampleFiles":
[
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/data-chart/axis-crossing/App.razor",
    "content": "\n@using IgniteUI.Blazor.Controls\n\n<div class=\"container vertical\">\n    <div class=\"options horizontal\">\n        <label>X-Axis Crossing Value:  </label>\n        <label class=\"options-value\" >@XAxisCrossingValue</label>\n        <input type=\"range\" min=\"-360\" max=\"360\" step=\"10\" value=\"0\" @oninput=\"OnXAxisCrossingValueChanged\" />\n        <label>Y-Axis Crossing Value:  </label>\n        <label class=\"options-value\" >@YAxisCrossingValue</label>\n        <input type=\"range\" min=\"-1.25\" max=\"1.25\" step=\"0.125\" value=\"0\" @oninput=\"OnYAxisCrossingValueChanged\" />\n    </div>\n    <div class=\"container vertical\">\n        @if (SinData != null && CosData != null)\n        {\n        <IgbDataChart Height=\"100%\" Width=\"100%\" IsVerticalZoomEnabled=\"true\" IsHorizontalZoomEnabled=\"true\"\n                   PlotAreaMarginTop=\"60\" PlotAreaMarginBottom=\"60\"\n                   PlotAreaMarginLeft=\"30\" PlotAreaMarginRight=\"30\">\n            <IgbNumericXAxis Name=\"xAxis\" Interval=\"40\" MinimumValue=\"-360\" MaximumValue=\"360\"\n                          LabelLocation=\"AxisLabelsLocation.InsideBottom\"\n                          LabelTopMargin=\"10\"\n                          CrossingAxisName=\"yAxis\"\n                          CrossingValue=\"@YAxisCrossingValue\"\n                          StrokeThickness=\"1\" Stroke=\"black\"/>\n            <IgbNumericYAxis Name=\"yAxis\" MinimumValue=\"-1.25\" MaximumValue=\"1.25\" Interval=\"0.25\"\n                          LabelLocation=\"AxisLabelsLocation.InsideLeft\"\n                          LabelRightMargin=\"10\"\n                          CrossingAxisName=\"xAxis\"\n                          CrossingValue=\"@XAxisCrossingValue\"\n                          StrokeThickness=\"1\" Stroke=\"black\"/>\n\n            <IgbScatterSplineSeries XAxisName=\"xAxis\" YAxisName=\"yAxis\" DataSource=\"SinData\"\n                                 XMemberPath=\"X\" YMemberPath=\"Y\" MarkerType=\"MarkerType.Circle\" />\n            <IgbScatterSplineSeries XAxisName=\"xAxis\" YAxisName=\"yAxis\" DataSource=\"CosData\"\n                                 XMemberPath=\"X\" YMemberPath=\"Y\" MarkerType=\"MarkerType.Circle\" />\n        </IgbDataChart>\n        }\n    </div>\n</div>\n\n@code {\n\n    private List<Point> SinData;\n    private List<Point> CosData;\n\n    private double YAxisCrossingValue = 0;\n    private double XAxisCrossingValue = 0;\n\n    protected override void OnInitialized()\n    {\n\n        List<Point> _sinData = new List<Point>();\n        List<Point> _cosData = new List<Point>();\n\n        for (int i = - 360; i <= 360; i += 10)\n        {\n            double radians = (i * Math.PI) / 180;\n            double sin = Math.Sin(radians);\n            double cos = Math.Cos(radians);\n\n            _sinData.Add(new Point() { X = i, Y = sin });\n            _cosData.Add(new Point() { X = i, Y = cos });\n        }\n\n        this.SinData = _sinData;\n        this.CosData = _cosData;\n    }\n\n    private void OnXAxisCrossingValueChanged(ChangeEventArgs args)\n    {\n        this.XAxisCrossingValue = double.Parse(args.Value.ToString());\n    }\n\n    private void OnYAxisCrossingValueChanged(ChangeEventArgs args)\n    {\n        this.YAxisCrossingValue = double.Parse(args.Value.ToString());\n    }\n}",
    "isMain": true,
    "fileExtension": "razor",
    "fileHeader": "razor"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/data-chart/axis-crossing/Program.cs",
    "content": "using System;\nusing System.Net.Http;\nusing System.Collections.Generic;\nusing System.Threading.Tasks;\nusing System.Text;\nusing Microsoft.AspNetCore.Components.WebAssembly.Hosting;\nusing Microsoft.Extensions.Configuration;\nusing Microsoft.Extensions.DependencyInjection;\nusing Microsoft.Extensions.Logging;\nusing IgniteUI.Blazor.Controls; // for registering Ignite UI modules\n\nnamespace Infragistics.Samples\n{\n    public class Program\n    {\n        public static async Task Main(string[] args)\n        {\n            var builder = WebAssemblyHostBuilder.CreateDefault(args);\n            builder.RootComponents.Add<App>(\"app\");\n            builder.Services.AddScoped(sp => new HttpClient { BaseAddress = new Uri(builder.HostEnvironment.BaseAddress) });\n            // registering Ignite UI modules\n            builder.Services.AddIgniteUIBlazor(\n                typeof(IgbDataChartCoreModule),\n                typeof(IgbDataChartScatterModule),\n                typeof(IgbDataChartScatterCoreModule),\n                typeof(IgbDataChartInteractivityModule)\n            );\n            await builder.Build().RunAsync();\n        }\n    }\n}",
    "isMain": true,
    "fileExtension": "cs",
    "fileHeader": "MODULES"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/data-chart/axis-crossing/wwwroot/index.css",
    "content": "/* \r\nCSS styles are loaded from the shared CSS file located at:\r\nhttps://static.infragistics.com/xplatform/css/samples/\r\n*/",
    "isMain": true,
    "fileExtension": "css",
    "fileHeader": "css"
  }
]
}