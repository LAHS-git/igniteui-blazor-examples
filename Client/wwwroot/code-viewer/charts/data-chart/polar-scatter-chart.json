{
 "sampleFiles":
[
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/data-chart/polar-scatter-chart/App.razor",
    "content": "\n@using IgniteUI.Blazor.Controls\n\n<div class=\"container vertical\">\n    <div class=\"legend-title\">\n        Wind Speed vs Boat Speed\n    </div>\n\n    <div class=\"container vertical fill\">\n        <IgbDataChart\n        Name=\"chart\"\n        @ref=\"chart\"\n        IsHorizontalZoomEnabled=\"false\"\n        IsVerticalZoomEnabled=\"false\">\n            <IgbNumericAngleAxis\n            Name=\"angleAxis\"\n            @ref=\"angleAxis\"\n            StartAngleOffset=\"-90\"\n            Interval=\"30\"\n            MinimumValue=\"0\"\n            MaximumValue=\"360\">\n            </IgbNumericAngleAxis>\n\n            <IgbNumericRadiusAxis\n            Name=\"radiusAxis\"\n            @ref=\"radiusAxis\"\n            RadiusExtentScale=\"0.9\"\n            InnerRadiusExtentScale=\"0.1\"\n            Interval=\"25\"\n            MinimumValue=\"0\"\n            MaximumValue=\"100\">\n            </IgbNumericRadiusAxis>\n\n            <IgbPolarScatterSeries\n            Name=\"PolarScatterSeries1\"\n            @ref=\"polarScatterSeries1\"\n            DataSource=\"BoatSailingData\"\n            AngleAxisName=\"angleAxis\"\n            RadiusAxisName=\"radiusAxis\"\n            AngleMemberPath=\"Direction\"\n            RadiusMemberPath=\"WindSpeed\"\n            ShowDefaultTooltip=\"false\"\n            Title=\"Wind Speed\"\n            MarkerType=\"MarkerType.Circle\">\n            </IgbPolarScatterSeries>\n\n            <IgbPolarScatterSeries\n            Name=\"PolarScatterSeries2\"\n            @ref=\"polarScatterSeries2\"\n            DataSource=\"BoatSailingData\"\n            AngleAxisName=\"angleAxis\"\n            RadiusAxisName=\"radiusAxis\"\n            AngleMemberPath=\"Direction\"\n            RadiusMemberPath=\"BoatSpeed\"\n            ShowDefaultTooltip=\"false\"\n            Title=\"Boat Speed\"\n            MarkerType=\"MarkerType.Circle\">\n            </IgbPolarScatterSeries>\n\n            <IgbDataToolTipLayer\n            Name=\"DataToolTipLayer\"\n            @ref=\"dataToolTipLayer\">\n            </IgbDataToolTipLayer>\n\n        </IgbDataChart>\n\n    </div>\n</div>\n\n@code {\n    \n\n    protected override async Task OnAfterRenderAsync(bool firstRender)\n    {\n        var chart = this.chart;\n        var angleAxis = this.angleAxis;\n        var radiusAxis = this.radiusAxis;\n        var polarScatterSeries1 = this.polarScatterSeries1;\n        var polarScatterSeries2 = this.polarScatterSeries2;\n        var dataToolTipLayer = this.dataToolTipLayer;\n\n    }\n\n    private IgbDataChart chart;\n    private IgbNumericAngleAxis angleAxis;\n    private IgbNumericRadiusAxis radiusAxis;\n    private IgbPolarScatterSeries polarScatterSeries1;\n    private IgbPolarScatterSeries polarScatterSeries2;\n    private IgbDataToolTipLayer dataToolTipLayer;\n\n    private BoatSailingData _boatSailingData = null;\n    public BoatSailingData BoatSailingData\n    {\n        get\n        {\n            if (_boatSailingData == null)\n            {\n                _boatSailingData = new BoatSailingData();\n            }\n            return _boatSailingData;\n        }\n    }\n\n}",
    "isMain": true,
    "fileExtension": "razor",
    "fileHeader": "razor"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/data-chart/polar-scatter-chart/BoatSailingData.cs",
    "content": "using System;\nusing System.Collections.Generic;\npublic class BoatSailingDataItem\n{\n    public double Direction { get; set; }\n    public double BoatSpeed { get; set; }\n    public double WindSpeed { get; set; }\n}\n\npublic class BoatSailingData\n    : List<BoatSailingDataItem>\n{\n    public BoatSailingData()\n    {\n        this.Add(new BoatSailingDataItem()\n        {\n            Direction = 0,\n            BoatSpeed = 70,\n            WindSpeed = 90\n        });\n        this.Add(new BoatSailingDataItem()\n        {\n            Direction = 45,\n            BoatSpeed = 35,\n            WindSpeed = 65\n        });\n        this.Add(new BoatSailingDataItem()\n        {\n            Direction = 90,\n            BoatSpeed = 25,\n            WindSpeed = 45\n        });\n        this.Add(new BoatSailingDataItem()\n        {\n            Direction = 135,\n            BoatSpeed = 15,\n            WindSpeed = 25\n        });\n        this.Add(new BoatSailingDataItem()\n        {\n            Direction = 180,\n            BoatSpeed = 0,\n            WindSpeed = 0\n        });\n        this.Add(new BoatSailingDataItem()\n        {\n            Direction = 225,\n            BoatSpeed = 15,\n            WindSpeed = 25\n        });\n        this.Add(new BoatSailingDataItem()\n        {\n            Direction = 270,\n            BoatSpeed = 25,\n            WindSpeed = 45\n        });\n        this.Add(new BoatSailingDataItem()\n        {\n            Direction = 315,\n            BoatSpeed = 35,\n            WindSpeed = 65\n        });\n        this.Add(new BoatSailingDataItem()\n        {\n            Direction = 360,\n            BoatSpeed = 70,\n            WindSpeed = 90\n        });\n    }\n}",
    "isMain": true,
    "fileExtension": "cs",
    "fileHeader": "DATA"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/data-chart/polar-scatter-chart/Program.cs",
    "content": "using System;\nusing System.Net.Http;\nusing System.Collections.Generic;\nusing System.Threading.Tasks;\nusing System.Text;\nusing Microsoft.AspNetCore.Components.WebAssembly.Hosting;\nusing Microsoft.Extensions.Configuration;\nusing Microsoft.Extensions.DependencyInjection;\nusing Microsoft.Extensions.Logging;\nusing IgniteUI.Blazor.Controls; // for registering Ignite UI modules\n\nnamespace Infragistics.Samples\n{\n    public class Program\n    {\n        public static async Task Main(string[] args)\n        {\n            var builder = WebAssemblyHostBuilder.CreateDefault(args);\n            builder.RootComponents.Add<App>(\"app\");\n            builder.Services.AddScoped(sp => new HttpClient { BaseAddress = new Uri(builder.HostEnvironment.BaseAddress) });\n            // registering Ignite UI modules\n            builder.Services.AddIgniteUIBlazor(\n                typeof(IgbDataChartCoreModule),\n                typeof(IgbDataChartPolarModule),\n                typeof(IgbDataChartPolarCoreModule),\n                typeof(IgbDataChartInteractivityModule),\n                typeof(IgbDataChartAnnotationModule)\n            );\n            await builder.Build().RunAsync();\n        }\n    }\n}",
    "isMain": true,
    "fileExtension": "cs",
    "fileHeader": "MODULES"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/data-chart/polar-scatter-chart/wwwroot/index.css",
    "content": "/*\r\nCSS styles are loaded from the shared CSS file located at:\r\nhttps://static.infragistics.com/xplatform/css/samples/\r\n*/",
    "isMain": true,
    "fileExtension": "css",
    "fileHeader": "css"
  }
]
}