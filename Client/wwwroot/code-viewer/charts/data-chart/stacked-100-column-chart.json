{
 "sampleFiles":
[
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/data-chart/stacked-100-column-chart/App.razor",
    "content": "\n@using IgniteUI.Blazor.Controls\n\n<div class=\"container vertical\">\n    <div class=\"legend-title\">\n        Distribution of Online Traffic Worldwide, by Device\n    </div>\n    <div class=\"legend\">\n        <IgbLegend\n        Name=\"Legend\"\n        @ref=\"legend\"\n        Orientation=\"LegendOrientation.Horizontal\">\n        </IgbLegend>\n\n    </div>\n\n    <div class=\"container vertical fill\">\n        <IgbDataChart\n        Name=\"chart\"\n        @ref=\"chart\"\n        IsHorizontalZoomEnabled=\"false\"\n        IsVerticalZoomEnabled=\"false\">\n            <IgbCategoryXAxis\n            Name=\"xAxis\"\n            @ref=\"xAxis\"\n            DataSource=\"OnlineTrafficByDevice\"\n            Label=\"Category\"\n            Gap=\"0.75\">\n            </IgbCategoryXAxis>\n\n            <IgbNumericYAxis\n            Name=\"yAxis\"\n            @ref=\"yAxis\"\n            MinimumValue=\"0\">\n            </IgbNumericYAxis>\n\n            <IgbStacked100ColumnSeries\n            Name=\"Stacked100ColumnSeries\"\n            @ref=\"stacked100ColumnSeries\"\n            DataSource=\"OnlineTrafficByDevice\"\n            XAxisName=\"xAxis\"\n            YAxisName=\"yAxis\"\n            ShowDefaultTooltip=\"true\"\n            AreaFillOpacity=\"1\">\n                <IgbStackedFragmentSeries\n                Name=\"s1\"\n                @ref=\"s1\"\n                ValueMemberPath=\"Desktop\"\n                Title=\"@(\"Desktop\")\">\n                </IgbStackedFragmentSeries>\n\n                <IgbStackedFragmentSeries\n                Name=\"s2\"\n                @ref=\"s2\"\n                ValueMemberPath=\"Mobile\"\n                Title=\"@(\"Mobile\")\">\n                </IgbStackedFragmentSeries>\n\n                <IgbStackedFragmentSeries\n                Name=\"s3\"\n                @ref=\"s3\"\n                ValueMemberPath=\"Tablet\"\n                Title=\"@(\"Tablet\")\">\n                </IgbStackedFragmentSeries>\n\n            </IgbStacked100ColumnSeries>\n\n            <IgbDataToolTipLayer\n            Name=\"DataToolTipLayer\"\n            @ref=\"dataToolTipLayer\">\n            </IgbDataToolTipLayer>\n\n        </IgbDataChart>\n\n    </div>\n</div>\n\n@code {\n    \n\n    private Action BindElements { get; set; }\n\n    protected override async Task OnAfterRenderAsync(bool firstRender)\n    {\n        var legend = this.legend;\n        var chart = this.chart;\n        var xAxis = this.xAxis;\n        var yAxis = this.yAxis;\n        var stacked100ColumnSeries = this.stacked100ColumnSeries;\n        var s1 = this.s1;\n        var s2 = this.s2;\n        var s3 = this.s3;\n        var dataToolTipLayer = this.dataToolTipLayer;\n\n        this.BindElements = () => {\n            chart.Legend = this.legend;\n        };\n        this.BindElements();\n\n    }\n\n    private IgbLegend legend;\n    private IgbDataChart chart;\n    private IgbCategoryXAxis xAxis;\n    private IgbNumericYAxis yAxis;\n    private IgbStacked100ColumnSeries stacked100ColumnSeries;\n    private IgbStackedFragmentSeries s1;\n    private IgbStackedFragmentSeries s2;\n    private IgbStackedFragmentSeries s3;\n    private IgbDataToolTipLayer dataToolTipLayer;\n\n    private OnlineTrafficByDevice _onlineTrafficByDevice = null;\n    public OnlineTrafficByDevice OnlineTrafficByDevice\n    {\n        get\n        {\n            if (_onlineTrafficByDevice == null)\n            {\n                _onlineTrafficByDevice = new OnlineTrafficByDevice();\n            }\n            return _onlineTrafficByDevice;\n        }\n    }\n\n}",
    "isMain": true,
    "fileExtension": "razor",
    "fileHeader": "razor"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/data-chart/stacked-100-column-chart/OnlineTrafficByDevice.cs",
    "content": "using System;\nusing System.Collections.Generic;\npublic class OnlineTrafficByDeviceItem\n{\n    public string Category { get; set; }\n    public double Desktop { get; set; }\n    public double Mobile { get; set; }\n    public double Tablet { get; set; }\n}\n\npublic class OnlineTrafficByDevice\n    : List<OnlineTrafficByDeviceItem>\n{\n    public OnlineTrafficByDevice()\n    {\n        this.Add(new OnlineTrafficByDeviceItem()\n        {\n            Category = @\"Apparel\",\n            Desktop = 27,\n            Mobile = 66,\n            Tablet = 7\n        });\n        this.Add(new OnlineTrafficByDeviceItem()\n        {\n            Category = @\"Beauty\",\n            Desktop = 29,\n            Mobile = 66,\n            Tablet = 5\n        });\n        this.Add(new OnlineTrafficByDeviceItem()\n        {\n            Category = @\"Travel\",\n            Desktop = 41,\n            Mobile = 51,\n            Tablet = 8\n        });\n        this.Add(new OnlineTrafficByDeviceItem()\n        {\n            Category = @\"Grocery\",\n            Desktop = 37,\n            Mobile = 57,\n            Tablet = 6\n        });\n        this.Add(new OnlineTrafficByDeviceItem()\n        {\n            Category = @\"Energy\",\n            Desktop = 58,\n            Mobile = 39,\n            Tablet = 3\n        });\n        this.Add(new OnlineTrafficByDeviceItem()\n        {\n            Category = @\"Home Supply\",\n            Desktop = 35,\n            Mobile = 56,\n            Tablet = 8\n        });\n        this.Add(new OnlineTrafficByDeviceItem()\n        {\n            Category = @\"Financial\",\n            Desktop = 58,\n            Mobile = 39,\n            Tablet = 3\n        });\n    }\n}",
    "isMain": true,
    "fileExtension": "cs",
    "fileHeader": "DATA"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/data-chart/stacked-100-column-chart/Program.cs",
    "content": "using System;\nusing System.Net.Http;\nusing System.Collections.Generic;\nusing System.Threading.Tasks;\nusing System.Text;\nusing Microsoft.AspNetCore.Components.WebAssembly.Hosting;\nusing Microsoft.Extensions.Configuration;\nusing Microsoft.Extensions.DependencyInjection;\nusing Microsoft.Extensions.Logging;\nusing IgniteUI.Blazor.Controls; // for registering Ignite UI modules\n\nnamespace Infragistics.Samples\n{\n    public class Program\n    {\n        public static async Task Main(string[] args)\n        {\n            var builder = WebAssemblyHostBuilder.CreateDefault(args);\n            builder.RootComponents.Add<App>(\"app\");\n            builder.Services.AddScoped(sp => new HttpClient { BaseAddress = new Uri(builder.HostEnvironment.BaseAddress) });\n            // registering Ignite UI modules\n            builder.Services.AddIgniteUIBlazor(\n                typeof(IgbLegendModule),\n                typeof(IgbDataChartCoreModule),\n                typeof(IgbDataChartCategoryModule),\n                typeof(IgbDataChartCategoryCoreModule),\n                typeof(IgbDataChartInteractivityModule),\n                typeof(IgbDataChartAnnotationModule),\n                typeof(IgbDataChartStackedModule),\n                typeof(IgbStackedFragmentSeriesModule)\n            );\n            await builder.Build().RunAsync();\n        }\n    }\n}",
    "isMain": true,
    "fileExtension": "cs",
    "fileHeader": "MODULES"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/data-chart/stacked-100-column-chart/wwwroot/index.css",
    "content": "/*\r\nCSS styles are loaded from the shared CSS file located at:\r\nhttps://static.infragistics.com/xplatform/css/samples/\r\n*/",
    "isMain": true,
    "fileExtension": "css",
    "fileHeader": "css"
  }
]
}