{
 "sampleFiles":
[
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/data-chart/legend-interactions/App.razor",
    "content": "\n@using IgniteUI.Blazor.Controls\n\n<div class=\"container vertical\">\n    <div class=\"options horizontal\">\n        <label class=\"options-label\">Highlight Mode:</label>\n        <select @bind=\"@HighlightingMode\" style=\"width: 7rem; margin-right: 1rem;\"\n                title=\"Chart will brighten or fade series depending on this setting\" >\n            <option>@SeriesHighlightingMode.Auto</option>\n            <option>@SeriesHighlightingMode.Brighten</option>\n            <option>@SeriesHighlightingMode.BrightenSpecific</option>\n            <option>@SeriesHighlightingMode.FadeOthers</option>\n            <option>@SeriesHighlightingMode.FadeOthersSpecific</option>\n            <option>@SeriesHighlightingMode.None</option>\n        </select>\n\n        <label class=\"options-label\">Highlight Behavior:</label>\n        <select @bind=\"@HighlightingBehavior\" style=\"width: 7rem; margin-right: 1rem;\"\n                title=\"Chart will highlight series when you hover over data points\" >\n            <option>@SeriesHighlightingBehavior.Auto</option>\n            <option>@SeriesHighlightingBehavior.DirectlyOver</option>\n            <option>@SeriesHighlightingBehavior.NearestItems</option>\n            <option>@SeriesHighlightingBehavior.NearestItemsAndSeries</option>\n            <option>@SeriesHighlightingBehavior.NearestItemsRetainMainShapes</option>\n        </select>\n\n        <label class=\"options-label\">Legend Highlight:</label>\n        <select @bind=\"@HighlightingLegend\" style=\"width: 7rem; margin-right: 1rem;\"\n                title=\"Chart will highlight series when you hover over legend items\">\n            <option>@LegendHighlightingMode.Auto</option>\n            <option>@LegendHighlightingMode.MatchSeries</option>\n            <option>@LegendHighlightingMode.None</option>\n        </select>\n    </div>\n\n    <div class=\"legend\">\n         <IgbLegend @ref=\"Legend\" Orientation=\"LegendOrientation.Horizontal\" />\n    </div>\n\n    <div class=\"container vertical\">\n        <IgbDataChart Height=\"100%\" Width=\"100%\"\n                   IsVerticalZoomEnabled=\"true\"\n                   IsHorizontalZoomEnabled=\"true\" @ref=\"Chart\"\n                   HighlightingBehavior=\"@HighlightingBehavior\"\n                   HighlightingMode=\"@HighlightingMode\"\n                   LegendHighlightingMode=\"@HighlightingLegend\"\n                   Legend=\"@Legend\">\n\n            <IgbCategoryXAxis Name=\"xAxis\" DataSource=\"Data\" Label=\"Year\" />\n            <IgbNumericYAxis  Name=\"yAxis\" MinimumValue=\"0\" Title=\"TWh\" TitleLeftMargin=\"10\" />\n\n            <IgbAreaSeries Title=\"Europe\" XAxisName=\"xAxis\" YAxisName=\"yAxis\"\n                        ValueMemberPath=\"Europe\"\n                        DataSource=\"Data\"\n                        ShowDefaultTooltip=\"true\"\n                        IsTransitionInEnabled=\"true\"\n                        IsHighlightingEnabled=\"true\"/>\n\n            <IgbAreaSeries Title=\"China\" XAxisName=\"xAxis\" YAxisName=\"yAxis\"\n                        ValueMemberPath=\"China\"\n                        DataSource=\"Data\"\n                        ShowDefaultTooltip=\"true\"\n                        IsTransitionInEnabled=\"true\"\n                        IsHighlightingEnabled=\"true\"/>\n\n            <IgbAreaSeries Title=\"USA\" XAxisName=\"xAxis\" YAxisName=\"yAxis\"\n                        ValueMemberPath=\"USA\"\n                        DataSource=\"Data\"\n                        ShowDefaultTooltip=\"true\"\n                        IsTransitionInEnabled=\"true\"\n                        IsHighlightingEnabled=\"true\"/>\n        </IgbDataChart>\n    </div>\n</div>\n\n@code {\n    \n\n    private List<EnergyRenewableInfo> Data = new EnergyRenewableData();\n    private LegendHighlightingMode HighlightingLegend = LegendHighlightingMode.MatchSeries;\n    private SeriesHighlightingMode HighlightingMode = SeriesHighlightingMode.FadeOthers;\n    private SeriesHighlightingBehavior HighlightingBehavior = SeriesHighlightingBehavior.DirectlyOver;\n    private IgbDataChart Chart;\n\n    private IgbLegend _Legend;\n    private IgbLegend Legend\n    {\n        get { return _Legend; }\n        set { _Legend = value; StateHasChanged(); }\n    }\n\n}",
    "isMain": true,
    "fileExtension": "razor",
    "fileHeader": "razor"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/data-chart/legend-interactions/Program.cs",
    "content": "using System;\nusing System.Net.Http;\nusing System.Collections.Generic;\nusing System.Threading.Tasks;\nusing System.Text;\nusing Microsoft.AspNetCore.Components.WebAssembly.Hosting;\nusing Microsoft.Extensions.Configuration;\nusing Microsoft.Extensions.DependencyInjection;\nusing Microsoft.Extensions.Logging;\nusing IgniteUI.Blazor.Controls; // for registering Ignite UI modules\n\nnamespace Infragistics.Samples\n{\n    public class Program\n    {\n        public static async Task Main(string[] args)\n        {\n            var builder = WebAssemblyHostBuilder.CreateDefault(args);\n            builder.RootComponents.Add<App>(\"app\");\n            builder.Services.AddScoped(sp => new HttpClient { BaseAddress = new Uri(builder.HostEnvironment.BaseAddress) });\n            // registering Ignite UI modules\n            builder.Services.AddIgniteUIBlazor(\n                typeof(IgbDataChartCoreModule),\n                typeof(IgbLegendModule),\n                typeof(IgbDataChartCategoryModule),\n                typeof(IgbDataChartInteractivityModule),\n                typeof(IgbColumnSeriesModule),\n                typeof(IgbNumberAbbreviatorModule)\n);\n            await builder.Build().RunAsync();\n        }\n    }\n}",
    "isMain": true,
    "fileExtension": "cs",
    "fileHeader": "MODULES"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/data-chart/legend-interactions/Services/EnergyRenewableData.cs",
    "content": "using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Threading.Tasks;\n\nnamespace Infragistics.Samples\n{\n    public class EnergyRenewableInfo\n    {\n        public string Year { get; set; }\n        public int Europe { get; set; }\n        public int China { get; set; }\n        public int USA { get; set; }\n    }\n\n    public class EnergyRenewableData : List<EnergyRenewableInfo>\n    {\n        public EnergyRenewableData()\n        {\n            Add(new EnergyRenewableInfo() { Year = \"2009\", Europe = 31, China = 21, USA = 19 });\n            Add(new EnergyRenewableInfo() { Year = \"2010\", Europe = 43, China = 26, USA = 24 });\n            Add(new EnergyRenewableInfo() { Year = \"2011\", Europe = 66, China = 29, USA = 28 });\n            Add(new EnergyRenewableInfo() { Year = \"2012\", Europe = 69, China = 32, USA = 26 });\n            Add(new EnergyRenewableInfo() { Year = \"2013\", Europe = 58, China = 47, USA = 38 });\n            Add(new EnergyRenewableInfo() { Year = \"2014\", Europe = 40, China = 46, USA = 31 });\n            Add(new EnergyRenewableInfo() { Year = \"2015\", Europe = 78, China = 50, USA = 19 });\n            Add(new EnergyRenewableInfo() { Year = \"2016\", Europe = 13, China = 90, USA = 52 });\n            Add(new EnergyRenewableInfo() { Year = \"2017\", Europe = 78, China = 132, USA = 50 });\n            Add(new EnergyRenewableInfo() { Year = \"2018\", Europe = 40, China = 134, USA = 34 });\n            Add(new EnergyRenewableInfo() { Year = \"2019\", Europe = 80, China = 96, USA = 38 });\n        }\n    }\n}",
    "isMain": true,
    "fileExtension": "cs",
    "fileHeader": "DATA"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/data-chart/legend-interactions/wwwroot/index.css",
    "content": "/* \r\nCSS styles are loaded from the shared CSS file located at:\r\nhttps://static.infragistics.com/xplatform/css/samples/\r\n*/",
    "isMain": true,
    "fileExtension": "css",
    "fileHeader": "css"
  }
]
}