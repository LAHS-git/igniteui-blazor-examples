{
 "sampleFiles":
[
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/category-chart/stack-columns/App.razor",
    "content": "\n@using IgniteUI.Blazor.Controls\n\n<div class=\"container vertical\">\n    @*YAxisFormatLabel=\"this.onFormatYAxisLabel\"*@\n\n    <div class=\"container vertical\">\n        @if (Data != null)\n        {\n            <IgbCategoryChart Height=\"100%\" Width=\"100%\"\n                           DataSource=\"Data\"\n                           TitleTopMargin=\"5\"\n                           ChartTitle=\"Time Spent Online By Activity\"\n                           ChartType=\"CategoryChartType.Column\"\n                           IsTransitionInEnabled=\"true\"\n                           XAxisLabelTextStyle=\"9pt Verdana\"\n                           XAxisLabelTopMargin=\"5\"\n                           XAxisLabelTextColor=\"Gray\"\n                           XAxisLabelAngle=\"90\"\n                           YAxisLabelTextStyle=\"9pt Verdana\"\n                           YAxisLabelRightMargin=\"5\"\n                           YAxisLabelTextColor=\"Gray\"\n                           YAxisLabelAngle=\"0\"\n                           XAxisTickLength=\"0\"\n                           XAxisTickStrokeThickness=\"0.5\"\n                           XAxisTickStroke=\"Gray\"\n                           YAxisTickLength=\"0\"\n                           XAxisInterval=\"1\"\n                           XAxisStroke=\"Gray\"\n                           XAxisStrokeThickness=\"2\"\n                           YAxisInterval=\"1\"\n                           YAxisMinimumValue=\"0\"\n                           YAxisMaximumValue=\"10\"\n                           YAxisMajorStroke=\"Gray\"\n                           YAxisMajorStrokeThickness=\"0.5\"\n                           YAxisMinorInterval=\"0.5\"\n                           YAxisMinorStroke=\"Gray\"\n                           YAxisMinorStrokeThickness=\"0\"\n                           XAxisGap=\"0.45\"\n                           XAxisOverlap=\"1\"\n                           IsHorizontalZoomEnabled=\"false\"\n                           IsVerticalZoomEnabled=\"false\">\n            </IgbCategoryChart>\n        }\n\n    </div>\n</div>\n\n@code {\n\n    private List<StatData> Data;\n\n    protected override void OnInitialized()\n    {\n\n        this.InitData();\n    }\n\n    private void InitData()\n    {\n        this.Data = new List<StatData>() {\n            new StatData(){ M = 0.1, N= 0.2, T= 1.1, S= 0.9, B= 0.3, Country = \"Japan\" },\n            new StatData(){ M = 0.2, N= 0.2, T= 1.3, S= 1.2, B= 0.5, Country = \"Germany\" },\n            new StatData(){ M = 0.2, N= 0.2, T= 1.5, S= 1.1, B= 0.4, Country = \"France\" },\n            new StatData(){ M = 0.3, N= 0.2, T= 1.5, S= 1.4, B= 0.5, Country = \"Ireland\" },\n            new StatData(){ M = 0.4, N= 0.3, T= 1.5, S= 1.3, B= 0.6, Country = \"Australia\" },\n            new StatData(){ M = 0.3, N= 0.3, T= 1.4, S= 1.5, B= 1.3, Country = \"Sweden\" },\n            new StatData(){ M = 0.4, N= 0.2, T= 1.4, S= 1.4, B= 1.4, Country = \"Poland\" },\n            new StatData(){ M = 0.5, N= 0.3, T= 1.4, S= 1.4, B= 1.5, Country = \"UK\" },\n            new StatData(){ M = 0.4, N= 0.3, T= 1.5, S= 1.4, B= 1.3, Country = \"Canada\" },\n            new StatData(){ M = 0.4, N= 0.4, T= 1.5, S= 1.6, B= 1.5, Country = \"Spain\" },\n            new StatData(){ M = 0.5, N= 0.3, T= 1.7, S= 1.3, B= 1.5, Country = \"Germany\" },\n            new StatData(){ M = 0.4, N= 0.4, T= 2.2, S= 1.4, B= 1.6, Country = \"Taiwan\" },\n            new StatData(){ M = 0.5, N= 0.3, T= 2.3, S= 1.4, B= 1.5, Country = \"Russia\" },\n            new StatData(){ M = 0.5, N= 0.3, T= 2.4, S= 1.6, B= 1.3, Country = \"China\" },\n            new StatData(){ M = 0.6, N= 0.4, T= 2.5, S= 1.8, B= 1.4, Country = \"USA\" },\n            new StatData(){ M = 0.5, N= 0.5, T= 2.4, S= 2.2, B= 1.5, Country = \"Italy\" },\n            new StatData(){ M = 0.5, N= 0.6, T= 2.5, S= 2.3, B= 1.4, Country = \"India\" },\n            new StatData(){ M = 0.6, N= 0.5, T= 2.5, S= 2.4, B= 1.3, Country = \"Argentina\" },\n            new StatData(){ M = 0.6, N= 0.6, T= 2.6, S= 2.5, B= 1.4, Country = \"Mexico\" },\n            new StatData(){ M = 0.7, N= 0.5, T= 2.6, S= 2.6, B= 1.4, Country = \"Turkey\" },\n            new StatData(){ M = 0.8, N= 0.7, T= 2.7, S= 2.7, B= 1.5, Country = \"Indonesia\" },\n            new StatData(){ M = 0.9, N= 0.7, T= 2.7, S= 2.8, B= 1.6, Country = \"Thailand\" },\n            new StatData(){ M = 0.8, N= 0.8, T= 2.8, S= 2.9, B= 1.7, Country = \"Brazil\" }\n        };\n\n        foreach (StatData item in this.Data)\n        {\n            item.Blogging = item.T + item.M + item.N + item.S + item.B;\n            item.Social = item.T + item.M + item.N + item.S;\n            item.News = item.T + item.M + item.N;\n            item.Music = item.T + item.M;\n            item.TV = item.T;\n\n            item.Blogging = Math.Round(item.Blogging * 10) / 10;\n            item.Social = Math.Round(item.Social * 10) / 10;\n            item.News = Math.Round(item.News * 10) / 10;\n            item.TV = Math.Round(item.TV * 10) / 10;\n            item.Music = Math.Round(item.Music * 10) / 10;\n        }\n    }\n}",
    "isMain": true,
    "fileExtension": "razor",
    "fileHeader": "razor"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/category-chart/stack-columns/Program.cs",
    "content": "using System;\nusing System.Net.Http;\nusing System.Collections.Generic;\nusing System.Threading.Tasks;\nusing System.Text;\nusing Microsoft.AspNetCore.Components.WebAssembly.Hosting;\nusing Microsoft.Extensions.Configuration;\nusing Microsoft.Extensions.DependencyInjection;\nusing Microsoft.Extensions.Logging;\nusing IgniteUI.Blazor.Controls; // for registering Ignite UI modules\n\nnamespace Infragistics.Samples\n{\n    public class Program\n    {\n        public static async Task Main(string[] args)\n        {\n            var builder = WebAssemblyHostBuilder.CreateDefault(args);\n            builder.RootComponents.Add<App>(\"app\");\n            builder.Services.AddScoped(sp => new HttpClient { BaseAddress = new Uri(builder.HostEnvironment.BaseAddress) });\n            // registering Ignite UI modules\n            builder.Services.AddIgniteUIBlazor(\n                typeof(IgbLegendModule),\n                typeof(IgbInputModule),\n                typeof(IgbPropertyEditorPanelModule),\n                typeof(IgbCategoryChartModule)\n            );\n            await builder.Build().RunAsync();\n        }\n    }\n}",
    "isMain": true,
    "fileExtension": "cs",
    "fileHeader": "MODULES"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/category-chart/stack-columns/Services/StatData.cs",
    "content": "ï»¿using System;\nusing System.Collections.Generic;\nusing System.Dynamic;\nusing System.Linq;\nusing System.Threading.Tasks;\n\nnamespace Infragistics.Samples\n{\n    public class StatData\n    {\n        public double M { get; set; }\n        public double N { get; set; }\n        public double T { get; set; }\n        public double S { get; set; }\n        public double B { get; set; }\n\n        public double Blogging { get; set; }\n        public double Social { get; set; }\n        public double News { get; set; }\n        public double Music { get; set; }\n        public double TV { get; set; }\n\n        public string Country { get; set; }\n    }\n}",
    "isMain": true,
    "fileExtension": "cs",
    "fileHeader": "DATA"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/category-chart/stack-columns/wwwroot/index.css",
    "content": "/* \r\nCSS styles are loaded from the shared CSS file located at:\r\nhttps://static.infragistics.com/xplatform/css/samples/\r\n*/",
    "isMain": true,
    "fileExtension": "css",
    "fileHeader": "css"
  }
]
}