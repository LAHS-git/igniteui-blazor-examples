{
 "sampleFiles":
[
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/category-chart/data-tooltip-positioning/App.razor",
    "content": "\n@using IgniteUI.Blazor.Controls\n\n<div class=\"container vertical\">\n    <div class=\"options vertical\">\n        <IgbPropertyEditorPanel\n        Name=\"PropertyEditor\"\n        @ref=\"propertyEditor\"\n\n        DescriptionType=\"CategoryChart\"\n        IsHorizontal=\"true\"\n        IsWrappingEnabled=\"true\">\n            <IgbPropertyEditorPropertyDescription\n            PropertyPath=\"DataToolTipGroupedPositionModeX\"\n            PrimitiveValue=\"@(\"PinRight\")\"\n            Name=\"GroupedPositionXEditor\"\n            @ref=\"groupedPositionXEditor\"\n            Label=\"Grouped X Position: \">\n            </IgbPropertyEditorPropertyDescription>\n\n            <IgbPropertyEditorPropertyDescription\n            PropertyPath=\"DataToolTipGroupedPositionModeY\"\n            PrimitiveValue=\"@(\"PinTop\")\"\n            Name=\"GroupedPositionYEditor\"\n            @ref=\"groupedPositionYEditor\"\n            Label=\"Grouped Y Position: \">\n            </IgbPropertyEditorPropertyDescription>\n\n            <IgbPropertyEditorPropertyDescription\n            PropertyPath=\"DataToolTipGroupingMode\"\n            PrimitiveValue=\"@(\"Grouped\")\"\n            Name=\"GroupingModeEditor\"\n            @ref=\"groupingModeEditor\"\n            Label=\"Grouping Mode: \">\n            </IgbPropertyEditorPropertyDescription>\n\n        </IgbPropertyEditorPanel>\n\n    </div>\n    <div class=\"legend-title\">\n        Highest Grossing Movie Franchises\n    </div>\n\n    <div class=\"container vertical fill\">\n        <IgbCategoryChart\n        Name=\"chart\"\n        @ref=\"chart\"\n        ChartType=\"CategoryChartType.Column\"\n        DataSource=\"HighestGrossingMovies\"\n        ToolTipType=\"ToolTipType.Data\"\n        DataToolTipGroupedPositionModeX=\"DataTooltipGroupedPositionX.PinRight\"\n        DataToolTipGroupedPositionModeY=\"DataTooltipGroupedPositionY.PinTop\"\n        DataToolTipGroupingMode=\"DataToolTipLayerGroupingMode.Grouped\"\n        XAxisInterval=\"1\"\n        YAxisTitle=\"Billions of U.S. Dollars\"\n        YAxisTitleLeftMargin=\"10\"\n        YAxisTitleRightMargin=\"5\"\n        YAxisLabelLeftMargin=\"0\"\n        CrosshairsDisplayMode=\"CrosshairsDisplayMode.None\">\n        </IgbCategoryChart>\n\n    </div>\n</div>\n\n@code {\n    \n\n    private Action BindElements { get; set; }\n\n    protected override async Task OnAfterRenderAsync(bool firstRender)\n    {\n        var propertyEditor = this.propertyEditor;\n        var groupedPositionXEditor = this.groupedPositionXEditor;\n        var groupedPositionYEditor = this.groupedPositionYEditor;\n        var groupingModeEditor = this.groupingModeEditor;\n        var chart = this.chart;\n\n        this.BindElements = () => {\n            propertyEditor.Target = this.chart;\n        };\n        this.BindElements();\n\n    }\n\n    private IgbPropertyEditorPanel propertyEditor;\n    private IgbPropertyEditorPropertyDescription groupedPositionXEditor;\n    private IgbPropertyEditorPropertyDescription groupedPositionYEditor;\n    private IgbPropertyEditorPropertyDescription groupingModeEditor;\n    private IgbCategoryChart chart;\n\n    private HighestGrossingMovies _highestGrossingMovies = null;\n    public HighestGrossingMovies HighestGrossingMovies\n    {\n        get\n        {\n            if (_highestGrossingMovies == null)\n            {\n                _highestGrossingMovies = new HighestGrossingMovies();\n            }\n            return _highestGrossingMovies;\n        }\n    }\n\n}",
    "isMain": true,
    "fileExtension": "razor",
    "fileHeader": "razor"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/category-chart/data-tooltip-positioning/HighestGrossingMovies.cs",
    "content": "using System;\nusing System.Collections.Generic;\npublic class HighestGrossingMoviesItem\n{\n    public string Franchise { get; set; }\n    public double TotalRevenue { get; set; }\n    public double HighestGrossing { get; set; }\n}\n\npublic class HighestGrossingMovies\n    : List<HighestGrossingMoviesItem>\n{\n    public HighestGrossingMovies()\n    {\n        this.Add(new HighestGrossingMoviesItem()\n        {\n            Franchise = @\"Marvel Universe\",\n            TotalRevenue = 22.55,\n            HighestGrossing = 2.8\n        });\n        this.Add(new HighestGrossingMoviesItem()\n        {\n            Franchise = @\"Star Wars\",\n            TotalRevenue = 10.32,\n            HighestGrossing = 2.07\n        });\n        this.Add(new HighestGrossingMoviesItem()\n        {\n            Franchise = @\"Harry Potter\",\n            TotalRevenue = 9.19,\n            HighestGrossing = 1.34\n        });\n        this.Add(new HighestGrossingMoviesItem()\n        {\n            Franchise = @\"Avengers\",\n            TotalRevenue = 7.76,\n            HighestGrossing = 2.8\n        });\n        this.Add(new HighestGrossingMoviesItem()\n        {\n            Franchise = @\"Spider Man\",\n            TotalRevenue = 7.22,\n            HighestGrossing = 1.28\n        });\n        this.Add(new HighestGrossingMoviesItem()\n        {\n            Franchise = @\"James Bond\",\n            TotalRevenue = 7.12,\n            HighestGrossing = 1.11\n        });\n    }\n}",
    "isMain": true,
    "fileExtension": "cs",
    "fileHeader": "DATA"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/category-chart/data-tooltip-positioning/Program.cs",
    "content": "using System;\nusing System.Net.Http;\nusing System.Collections.Generic;\nusing System.Threading.Tasks;\nusing System.Text;\nusing Microsoft.AspNetCore.Components.WebAssembly.Hosting;\nusing Microsoft.Extensions.Configuration;\nusing Microsoft.Extensions.DependencyInjection;\nusing Microsoft.Extensions.Logging;\nusing IgniteUI.Blazor.Controls; // for registering Ignite UI modules\n\nnamespace Infragistics.Samples\n{\n    public class Program\n    {\n        public static async Task Main(string[] args)\n        {\n            var builder = WebAssemblyHostBuilder.CreateDefault(args);\n            builder.RootComponents.Add<App>(\"app\");\n            builder.Services.AddScoped(sp => new HttpClient { BaseAddress = new Uri(builder.HostEnvironment.BaseAddress) });\n            // registering Ignite UI modules\n            builder.Services.AddIgniteUIBlazor(\n                typeof(IgbInputModule),\n                typeof(IgbPropertyEditorPanelModule),\n                typeof(IgbLegendModule),\n                typeof(IgbCategoryChartModule)\n            );\n            await builder.Build().RunAsync();\n        }\n    }\n}",
    "isMain": true,
    "fileExtension": "cs",
    "fileHeader": "MODULES"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/category-chart/data-tooltip-positioning/wwwroot/index.css",
    "content": "/*\r\nCSS styles are loaded from the shared CSS file located at:\r\nhttps://static.infragistics.com/xplatform/css/samples/\r\n*/",
    "isMain": true,
    "fileExtension": "css",
    "fileHeader": "css"
  }
]
}