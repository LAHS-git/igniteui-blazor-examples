{
 "sampleFiles":
[
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/category-chart/column-chart-single-source/App.razor",
    "content": "\n@using IgniteUI.Blazor.Controls\n\n<div class=\"container vertical\">\n    <div class=\"legend-title\">\n        Average Temperature Range in New York\n    </div>\n\n    <div class=\"container vertical fill\">\n        <IgbCategoryChart\n        Name=\"chart\"\n        @ref=\"chart\"\n        ChartType=\"CategoryChartType.Column\"\n        DataSource=\"TemperatureAverageData\"\n        YAxisTitle=\"Temperature in Degrees Celsius\"\n        YAxisTitleLeftMargin=\"10\"\n        YAxisTitleRightMargin=\"5\"\n        YAxisLabelLeftMargin=\"0\"\n        IsHorizontalZoomEnabled=\"false\"\n        IsVerticalZoomEnabled=\"false\"\n        IsCategoryHighlightingEnabled=\"true\"\n        HighlightingMode=\"SeriesHighlightingMode.FadeOthersSpecific\"\n        HighlightingBehavior=\"SeriesHighlightingBehavior.NearestItemsAndSeries\"\n        CrosshairsDisplayMode=\"CrosshairsDisplayMode.None\">\n        </IgbCategoryChart>\n\n    </div>\n</div>\n\n@code {\n    \n\n    protected override async Task OnAfterRenderAsync(bool firstRender)\n    {\n        var chart = this.chart;\n\n    }\n\n    private IgbCategoryChart chart;\n\n    private TemperatureAverageData _temperatureAverageData = null;\n    public TemperatureAverageData TemperatureAverageData\n    {\n        get\n        {\n            if (_temperatureAverageData == null)\n            {\n                _temperatureAverageData = new TemperatureAverageData();\n            }\n            return _temperatureAverageData;\n        }\n    }\n\n}",
    "isMain": true,
    "fileExtension": "razor",
    "fileHeader": "razor"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/category-chart/column-chart-single-source/Program.cs",
    "content": "using System;\nusing System.Net.Http;\nusing System.Collections.Generic;\nusing System.Threading.Tasks;\nusing System.Text;\nusing Microsoft.AspNetCore.Components.WebAssembly.Hosting;\nusing Microsoft.Extensions.Configuration;\nusing Microsoft.Extensions.DependencyInjection;\nusing Microsoft.Extensions.Logging;\nusing IgniteUI.Blazor.Controls; // for registering Ignite UI modules\n\nnamespace Infragistics.Samples\n{\n    public class Program\n    {\n        public static async Task Main(string[] args)\n        {\n            var builder = WebAssemblyHostBuilder.CreateDefault(args);\n            builder.RootComponents.Add<App>(\"app\");\n            builder.Services.AddScoped(sp => new HttpClient { BaseAddress = new Uri(builder.HostEnvironment.BaseAddress) });\n            // registering Ignite UI modules\n            builder.Services.AddIgniteUIBlazor(\n                typeof(IgbCategoryChartModule)\n            );\n            await builder.Build().RunAsync();\n        }\n    }\n}",
    "isMain": true,
    "fileExtension": "cs",
    "fileHeader": "MODULES"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/category-chart/column-chart-single-source/TemperatureAverageData.cs",
    "content": "using System;\nusing System.Collections.Generic;\npublic class TemperatureAverageDataItem\n{\n    public string Month { get; set; }\n    public double Temperature { get; set; }\n}\n\npublic class TemperatureAverageData\n    : List<TemperatureAverageDataItem>\n{\n    public TemperatureAverageData()\n    {\n        this.Add(new TemperatureAverageDataItem()\n        {\n            Month = @\"Jan\",\n            Temperature = 3\n        });\n        this.Add(new TemperatureAverageDataItem()\n        {\n            Month = @\"Feb\",\n            Temperature = 4\n        });\n        this.Add(new TemperatureAverageDataItem()\n        {\n            Month = @\"Mar\",\n            Temperature = 9\n        });\n        this.Add(new TemperatureAverageDataItem()\n        {\n            Month = @\"Apr\",\n            Temperature = 15\n        });\n        this.Add(new TemperatureAverageDataItem()\n        {\n            Month = @\"May\",\n            Temperature = 21\n        });\n        this.Add(new TemperatureAverageDataItem()\n        {\n            Month = @\"Jun\",\n            Temperature = 26\n        });\n        this.Add(new TemperatureAverageDataItem()\n        {\n            Month = @\"Jul\",\n            Temperature = 29\n        });\n        this.Add(new TemperatureAverageDataItem()\n        {\n            Month = @\"Aug\",\n            Temperature = 28\n        });\n        this.Add(new TemperatureAverageDataItem()\n        {\n            Month = @\"Sep\",\n            Temperature = 24\n        });\n        this.Add(new TemperatureAverageDataItem()\n        {\n            Month = @\"Oct\",\n            Temperature = 18\n        });\n        this.Add(new TemperatureAverageDataItem()\n        {\n            Month = @\"Nov\",\n            Temperature = 11\n        });\n        this.Add(new TemperatureAverageDataItem()\n        {\n            Month = @\"Dec\",\n            Temperature = 5\n        });\n    }\n}",
    "isMain": true,
    "fileExtension": "cs",
    "fileHeader": "DATA"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/category-chart/column-chart-single-source/wwwroot/index.css",
    "content": "/*\r\nCSS styles are loaded from the shared CSS file located at:\r\nhttps://static.infragistics.com/xplatform/css/samples/\r\n*/",
    "isMain": true,
    "fileExtension": "css",
    "fileHeader": "css"
  }
]
}