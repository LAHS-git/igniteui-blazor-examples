{
 "sampleFiles":
[
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/category-chart/annotations-all/App.razor",
    "content": "\n@using IgniteUI.Blazor.Controls\n\n<div class=\"container vertical\">\n    <div class=\"options vertical\">\n        <IgbPropertyEditorPanel\n        Name=\"PropertyEditor\"\n        @ref=\"propertyEditor\"\n\n        DescriptionType=\"CategoryChart\"\n        IsHorizontal=\"true\"\n        IsWrappingEnabled=\"true\">\n            <IgbPropertyEditorPropertyDescription\n            PropertyPath=\"CrosshairsDisplayMode\"\n            Name=\"CrosshairsDisplayModeEditor\"\n            @ref=\"crosshairsDisplayModeEditor\"\n            Label=\"Crosshairs: \"\n            PrimitiveValue=\"@(\"Both\")\">\n            </IgbPropertyEditorPropertyDescription>\n\n            <IgbPropertyEditorPropertyDescription\n            PropertyPath=\"HighlightingMode\"\n            Name=\"HighlightingModeEditor\"\n            @ref=\"highlightingModeEditor\"\n            Label=\"Highlighting: \"\n            PrimitiveValue=\"@(\"BrightenSpecific\")\">\n            </IgbPropertyEditorPropertyDescription>\n\n            <IgbPropertyEditorPropertyDescription\n            PropertyPath=\"CalloutsVisible\"\n            Name=\"CalloutsVisibleEditor\"\n            @ref=\"calloutsVisibleEditor\"\n            Label=\"Callouts: \"\n            ShouldOverrideDefaultEditor=\"true\"\n            PrimitiveValue=\"true\">\n            </IgbPropertyEditorPropertyDescription>\n\n            <IgbPropertyEditorPropertyDescription\n            PropertyPath=\"FinalValueAnnotationsVisible\"\n            Name=\"FinalValueAnnotationsEditor\"\n            @ref=\"finalValueAnnotationsEditor\"\n            Label=\"Final Value: \"\n            ShouldOverrideDefaultEditor=\"true\"\n            PrimitiveValue=\"true\">\n            </IgbPropertyEditorPropertyDescription>\n\n        </IgbPropertyEditorPanel>\n\n    </div>\n    <div class=\"legend-title\">\n        Average Temperature in Sydney\n    </div>\n\n    <div class=\"container vertical fill\">\n        <IgbCategoryChart\n        Name=\"chart\"\n        @ref=\"chart\"\n        ChartType=\"CategoryChartType.Column\"\n        ComputedPlotAreaMarginMode=\"ComputedPlotAreaMarginMode.Series\"\n        IsHorizontalZoomEnabled=\"false\"\n        IsVerticalZoomEnabled=\"false\"\n        IncludedProperties=\"@(new string[] { \"Month\", \"Temperature\" })\"\n        DataSource=\"TemperatureAnnotatedData\"\n        CalloutsDataSource=\"TemperatureAnnotatedData\"\n        CalloutsVisible=\"true\"\n        CalloutsXMemberPath=\"Index\"\n        CalloutsYMemberPath=\"Temperature\"\n        CalloutsLabelMemberPath=\"TempInfo\"\n        IsCategoryHighlightingEnabled=\"true\"\n        HighlightingMode=\"SeriesHighlightingMode.BrightenSpecific\"\n        HighlightingBehavior=\"SeriesHighlightingBehavior.NearestItemsAndSeries\"\n        CrosshairsDisplayMode=\"CrosshairsDisplayMode.Both\"\n        CrosshairsAnnotationYAxisPrecision=\"0\"\n        CrosshairsAnnotationXAxisBackground=\"black\"\n        FinalValueAnnotationsVisible=\"true\"\n        FinalValueAnnotationsBackground=\"dodgerblue\"\n        FinalValueAnnotationsTextColor=\"white\"\n        FinalValueAnnotationsPrecision=\"0\"\n        YAxisMaximumValue=\"35\"\n        YAxisLabelLocation=\"YAxisLabelLocation.OutsideRight\">\n        </IgbCategoryChart>\n\n    </div>\n</div>\n\n@code {\n    \n\n    private Action BindElements { get; set; }\n\n    protected override async Task OnAfterRenderAsync(bool firstRender)\n    {\n        var propertyEditor = this.propertyEditor;\n        var crosshairsDisplayModeEditor = this.crosshairsDisplayModeEditor;\n        var highlightingModeEditor = this.highlightingModeEditor;\n        var calloutsVisibleEditor = this.calloutsVisibleEditor;\n        var finalValueAnnotationsEditor = this.finalValueAnnotationsEditor;\n        var chart = this.chart;\n\n        this.BindElements = () => {\n            propertyEditor.Target = this.chart;\n        };\n        this.BindElements();\n\n    }\n\n    private IgbPropertyEditorPanel propertyEditor;\n    private IgbPropertyEditorPropertyDescription crosshairsDisplayModeEditor;\n    private IgbPropertyEditorPropertyDescription highlightingModeEditor;\n    private IgbPropertyEditorPropertyDescription calloutsVisibleEditor;\n    private IgbPropertyEditorPropertyDescription finalValueAnnotationsEditor;\n    private IgbCategoryChart chart;\n\n    private TemperatureAnnotatedData _temperatureAnnotatedData = null;\n    public TemperatureAnnotatedData TemperatureAnnotatedData\n    {\n        get\n        {\n            if (_temperatureAnnotatedData == null)\n            {\n                _temperatureAnnotatedData = new TemperatureAnnotatedData();\n            }\n            return _temperatureAnnotatedData;\n        }\n    }\n\n}",
    "isMain": true,
    "fileExtension": "razor",
    "fileHeader": "razor"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/category-chart/annotations-all/Program.cs",
    "content": "using System;\nusing System.Net.Http;\nusing System.Collections.Generic;\nusing System.Threading.Tasks;\nusing System.Text;\nusing Microsoft.AspNetCore.Components.WebAssembly.Hosting;\nusing Microsoft.Extensions.Configuration;\nusing Microsoft.Extensions.DependencyInjection;\nusing Microsoft.Extensions.Logging;\nusing IgniteUI.Blazor.Controls; // for registering Ignite UI modules\n\nnamespace Infragistics.Samples\n{\n    public class Program\n    {\n        public static async Task Main(string[] args)\n        {\n            var builder = WebAssemblyHostBuilder.CreateDefault(args);\n            builder.RootComponents.Add<App>(\"app\");\n            builder.Services.AddScoped(sp => new HttpClient { BaseAddress = new Uri(builder.HostEnvironment.BaseAddress) });\n            // registering Ignite UI modules\n            builder.Services.AddIgniteUIBlazor(\n                typeof(IgbInputModule),\n                typeof(IgbPropertyEditorPanelModule),\n                typeof(IgbCategoryChartModule)\n            );\n            await builder.Build().RunAsync();\n        }\n    }\n}",
    "isMain": true,
    "fileExtension": "cs",
    "fileHeader": "MODULES"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/category-chart/annotations-all/TemperatureAnnotatedData.cs",
    "content": "using System;\nusing System.Collections.Generic;\npublic class TemperatureAnnotatedDataItem\n{\n    public double Index { get; set; }\n    public string TempInfo { get; set; }\n    public double Temperature { get; set; }\n    public string Month { get; set; }\n}\n\npublic class TemperatureAnnotatedData\n    : List<TemperatureAnnotatedDataItem>\n{\n    public TemperatureAnnotatedData()\n    {\n        this.Add(new TemperatureAnnotatedDataItem()\n        {\n            Index = 0,\n            TempInfo = @\"27°C\",\n            Temperature = 27,\n            Month = @\"Jan\"\n        });\n        this.Add(new TemperatureAnnotatedDataItem()\n        {\n            Index = 1,\n            TempInfo = @\"25°C\",\n            Temperature = 25,\n            Month = @\"Feb\"\n        });\n        this.Add(new TemperatureAnnotatedDataItem()\n        {\n            Index = 2,\n            TempInfo = @\"21°C\",\n            Temperature = 21,\n            Month = @\"Mar\"\n        });\n        this.Add(new TemperatureAnnotatedDataItem()\n        {\n            Index = 3,\n            TempInfo = @\"19°C\",\n            Temperature = 19,\n            Month = @\"Apr\"\n        });\n        this.Add(new TemperatureAnnotatedDataItem()\n        {\n            Index = 4,\n            TempInfo = @\"16°C\",\n            Temperature = 16,\n            Month = @\"May\"\n        });\n        this.Add(new TemperatureAnnotatedDataItem()\n        {\n            Index = 5,\n            TempInfo = @\"13°C\",\n            Temperature = 13,\n            Month = @\"Jun\"\n        });\n        this.Add(new TemperatureAnnotatedDataItem()\n        {\n            Index = 6,\n            TempInfo = @\"14°C\",\n            Temperature = 14,\n            Month = @\"Jul\"\n        });\n        this.Add(new TemperatureAnnotatedDataItem()\n        {\n            Index = 7,\n            TempInfo = @\"15°C\",\n            Temperature = 15,\n            Month = @\"Aug\"\n        });\n        this.Add(new TemperatureAnnotatedDataItem()\n        {\n            Index = 8,\n            TempInfo = @\"19°C\",\n            Temperature = 19,\n            Month = @\"Sep\"\n        });\n        this.Add(new TemperatureAnnotatedDataItem()\n        {\n            Index = 9,\n            TempInfo = @\"22°C\",\n            Temperature = 22,\n            Month = @\"Oct\"\n        });\n        this.Add(new TemperatureAnnotatedDataItem()\n        {\n            Index = 10,\n            TempInfo = @\"26°C\",\n            Temperature = 26,\n            Month = @\"Nov\"\n        });\n        this.Add(new TemperatureAnnotatedDataItem()\n        {\n            Index = 11,\n            TempInfo = @\"30°C\",\n            Temperature = 30,\n            Month = @\"Dec\"\n        });\n    }\n}",
    "isMain": true,
    "fileExtension": "cs",
    "fileHeader": "DATA"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/category-chart/annotations-all/wwwroot/index.css",
    "content": "/*\r\nCSS styles are loaded from the shared CSS file located at:\r\nhttps://static.infragistics.com/xplatform/css/samples/\r\n*/",
    "isMain": true,
    "fileExtension": "css",
    "fileHeader": "css"
  }
]
}