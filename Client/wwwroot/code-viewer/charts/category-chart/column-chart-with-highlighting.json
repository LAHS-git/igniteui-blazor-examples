{
 "sampleFiles":
[
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/category-chart/column-chart-with-highlighting/App.razor",
    "content": "\n@using IgniteUI.Blazor.Controls\n\n<div class=\"container vertical sample\">\n\n    <div class=\"options horizontal\">\n        <label class=\"options-label\" style=\"margin-left: 0.25rem;\">Highlight Target:</label>\n        <select @onchange=\"OnHighlightingTargetChanged\" style=\"width: 7rem; margin-right: 1rem;\">\n            <option>Series</option>\n            <option>Item</option>\n            <option>Category</option>\n            <option>None</option>\n        </select>\n\n        <label class=\"options-label\">Mode:</label>\n        <select @bind=\"@HighlightingMode\" style=\"width: 7rem; margin-right: 1rem;\">\n            <option>@SeriesHighlightingMode.Auto</option>\n            <option>@SeriesHighlightingMode.Brighten</option>\n            <option>@SeriesHighlightingMode.BrightenSpecific</option>\n            <option>@SeriesHighlightingMode.FadeOthers</option>\n            <option>@SeriesHighlightingMode.FadeOthersSpecific</option>\n            <option>@SeriesHighlightingMode.None</option>\n        </select>\n\n        <label class=\"options-label\">Behavior:</label>\n        <select @bind=\"@HighlightingBehavior\" style=\"width: 7rem; margin-right: 1rem;\" >\n            <option>@SeriesHighlightingBehavior.Auto</option>\n            <option>@SeriesHighlightingBehavior.DirectlyOver</option>\n            <option>@SeriesHighlightingBehavior.NearestItems</option>\n            <option>@SeriesHighlightingBehavior.NearestItemsAndSeries</option>\n            <option>@SeriesHighlightingBehavior.NearestItemsRetainMainShapes</option>\n        </select>\n\n        <label class=\"options-label\">Legend:</label>\n        <select @bind=\"@HighlightingLegend\" style=\"width: 7rem; margin-right: 1rem;\"\n                title=\"Chart will highlight series when you hover over legend items\">\n            <option>@LegendHighlightingMode.Auto</option>\n            <option>@LegendHighlightingMode.MatchSeries</option>\n            <option>@LegendHighlightingMode.None</option>\n        </select>\n    </div>\n\n    <div class=\"options vertical\">\n        <label class=\"legend-title\">Average Temperatures in the U.S. Cities</label>\n        <div class=\"legend\">\n            <IgbLegend @ref=\"Legend\" Orientation=\"LegendOrientation.Horizontal\" />\n        </div>\n    </div>\n\n    <div class=\"container vertical\">\n        <IgbCategoryChart Height=\"100%\" Width=\"100%\"\n                       Legend=\"@Legend\"\n                       DataSource=\"Data\"\n                       ChartType=\"CategoryChartType.Column\"\n                       IsCategoryHighlightingEnabled=\"@IsCategoryHighlighting\"\n                       IsItemHighlightingEnabled=\"@IsItemHighlighting\"\n                       IsSeriesHighlightingEnabled=\"@IsSeriesHighlighting\"\n                       HighlightingMode=\"@HighlightingMode\"\n                       HighlightingBehavior=\"@HighlightingBehavior\"\n                       LegendHighlightingMode=\"@HighlightingLegend\"\n                       YAxisTitle=\"Temperatures in Celsius\"\n                       YAxisMinimumValue=\"0\"\n                       XAxisInterval=\"1\">\n        </IgbCategoryChart>\n\n    </div>\n</div>\n\n@code {\n    \n\n    private IgbLegend _Legend;\n    private IgbLegend Legend\n    {\n        get { return _Legend; }\n        set { _Legend = value; StateHasChanged(); }\n    }\n\n    private bool IsSeriesHighlighting = true;\n    private bool IsItemHighlighting = false;\n    private bool IsCategoryHighlighting = false;\n    private LegendHighlightingMode HighlightingLegend = LegendHighlightingMode.Auto;\n    private SeriesHighlightingMode HighlightingMode = SeriesHighlightingMode.Auto;\n    private SeriesHighlightingBehavior HighlightingBehavior = SeriesHighlightingBehavior.Auto;\n\n    private List<AverageTemperature> Data = new AverageTemperatureData();\n\n    private void OnHighlightingTargetChanged(ChangeEventArgs args)\n    {\n        var highlighingTarget = (string)args.Value;\n        if (highlighingTarget == \"Series\")\n        {\n            this.IsItemHighlighting = false;\n            this.IsSeriesHighlighting = true;\n            this.IsCategoryHighlighting = false;\n        }\n        else if(highlighingTarget == \"Item\")\n        {\n            this.IsItemHighlighting = true;\n            this.IsSeriesHighlighting = false;\n            this.IsCategoryHighlighting = false;\n        }\n        else if (highlighingTarget == \"Category\")\n        {\n            this.IsItemHighlighting = false;\n            this.IsSeriesHighlighting = false;\n            this.IsCategoryHighlighting = true;\n        }\n        else\n        {\n            this.IsItemHighlighting = false;\n            this.IsSeriesHighlighting = false;\n            this.IsCategoryHighlighting = false;\n        }\n    }\n\n    public class AverageTemperature\n    {\n        public string Month { get; set; }\n        public double NewYork { get; set; }\n        public double LosAngeles { get; set; }\n    }\n\n    public class AverageTemperatureData : List<AverageTemperature>\n    {\n        public AverageTemperatureData()\n        {\n            this.Add(new AverageTemperature { NewYork = 10.6, LosAngeles = 28.3, Month = \"JAN\" });\n            this.Add(new AverageTemperature { NewYork = 7.8,  LosAngeles = 31.1, Month = \"FEB\" });\n            this.Add(new AverageTemperature { NewYork = 12.2, LosAngeles = 27.8, Month = \"MAR\" });\n            this.Add(new AverageTemperature { NewYork = 11.7, LosAngeles = 33.9, Month = \"APR\" });\n            this.Add(new AverageTemperature { NewYork = 19.4, LosAngeles = 35.0, Month = \"MAY\" });\n            this.Add(new AverageTemperature { NewYork = 23.3, LosAngeles = 36.7, Month = \"JUN\" });\n            this.Add(new AverageTemperature { NewYork = 27.2, LosAngeles = 33.3, Month = \"JUL\" });\n            this.Add(new AverageTemperature { NewYork = 25.6, LosAngeles = 36.7, Month = \"AUG\" });\n            this.Add(new AverageTemperature { NewYork = 22.8, LosAngeles = 43.9, Month = \"SEP\" });\n            this.Add(new AverageTemperature { NewYork = 17.8, LosAngeles = 38.3, Month = \"OCT\" });\n            this.Add(new AverageTemperature { NewYork = 17.8, LosAngeles = 32.8, Month = \"NOV\" });\n            this.Add(new AverageTemperature { NewYork = 8.3,  LosAngeles = 28.9, Month = \"DEC\" });\n        }\n    }\n}",
    "isMain": true,
    "fileExtension": "razor",
    "fileHeader": "razor"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/category-chart/column-chart-with-highlighting/Program.cs",
    "content": "using System;\nusing System.Net.Http;\nusing System.Collections.Generic;\nusing System.Threading.Tasks;\nusing System.Text;\nusing Microsoft.AspNetCore.Components.WebAssembly.Hosting;\nusing Microsoft.Extensions.Configuration;\nusing Microsoft.Extensions.DependencyInjection;\nusing Microsoft.Extensions.Logging;\nusing IgniteUI.Blazor.Controls; // for registering Ignite UI modules\n\nnamespace Infragistics.Samples\n{\n    public class Program\n    {\n        public static async Task Main(string[] args)\n        {\n            var builder = WebAssemblyHostBuilder.CreateDefault(args);\n            builder.RootComponents.Add<App>(\"app\");\n            builder.Services.AddScoped(sp => new HttpClient { BaseAddress = new Uri(builder.HostEnvironment.BaseAddress) });\n            // registering Ignite UI modules\n            builder.Services.AddIgniteUIBlazor(\n                typeof(IgbLegendModule),\n                typeof(IgbInputModule),\n                typeof(IgbPropertyEditorPanelModule),\n                typeof(IgbCategoryChartModule)\n            );\n            await builder.Build().RunAsync();\n        }\n    }\n}",
    "isMain": true,
    "fileExtension": "cs",
    "fileHeader": "MODULES"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/category-chart/column-chart-with-highlighting/wwwroot/index.css",
    "content": "/* \r\nCSS styles are loaded from the shared CSS file located at:\r\nhttps://static.infragistics.com/xplatform/css/samples/\r\n*/",
    "isMain": true,
    "fileExtension": "css",
    "fileHeader": "css"
  }
]
}