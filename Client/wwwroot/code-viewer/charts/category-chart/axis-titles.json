{
 "sampleFiles":
[
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/category-chart/axis-titles/App.razor",
    "content": "\n@using IgniteUI.Blazor.Controls\n\n<div class=\"container vertical\">\n    <div class=\"legend-title\">\n        Renewable Electricity Generated\n    </div>\n    <div class=\"legend\">\n        <IgbLegend\n        Name=\"Legend\"\n        @ref=\"legend\"\n        Orientation=\"LegendOrientation.Horizontal\">\n        </IgbLegend>\n\n    </div>\n\n    <div class=\"container vertical fill\">\n        <IgbCategoryChart\n        Name=\"chart\"\n        @ref=\"chart\"\n        DataSource=\"CountryRenewableElectricity\"\n        IncludedProperties=\"@(new string[] { \"Year\", \"Europe\", \"China\", \"America\" })\"\n        ChartType=\"CategoryChartType.Line\"\n        IsHorizontalZoomEnabled=\"false\"\n        IsVerticalZoomEnabled=\"false\"\n        ComputedPlotAreaMarginMode=\"ComputedPlotAreaMarginMode.Series\"\n        XAxisTitle=\"Year\"\n        XAxisTitleTextColor=\"gray\"\n        XAxisTitleTextStyle=\"10pt 'Titillium Web'\"\n        XAxisTitleAngle=\"0\"\n        YAxisTitle=\"Trillions of Watt-hours (Twh)\"\n        YAxisTitleTextColor=\"gray\"\n        YAxisTitleTextStyle=\"10pt 'Titillium Web'\"\n        YAxisTitleAngle=\"90\"\n        YAxisTitleLeftMargin=\"5\">\n        </IgbCategoryChart>\n\n    </div>\n</div>\n\n@code {\n    \n\n    private Action BindElements { get; set; }\n\n    protected override async Task OnAfterRenderAsync(bool firstRender)\n    {\n        var legend = this.legend;\n        var chart = this.chart;\n\n        this.BindElements = () => {\n            chart.Legend = this.legend;\n        };\n        this.BindElements();\n\n    }\n\n    private IgbLegend legend;\n    private IgbCategoryChart chart;\n\n    private CountryRenewableElectricity _countryRenewableElectricity = null;\n    public CountryRenewableElectricity CountryRenewableElectricity\n    {\n        get\n        {\n            if (_countryRenewableElectricity == null)\n            {\n                _countryRenewableElectricity = new CountryRenewableElectricity();\n            }\n            return _countryRenewableElectricity;\n        }\n    }\n\n}",
    "isMain": true,
    "fileExtension": "razor",
    "fileHeader": "razor"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/category-chart/axis-titles/CountryRenewableElectricity.cs",
    "content": "using System;\nusing System.Collections.Generic;\npublic class CountryRenewableElectricityItem\n{\n    public string Year { get; set; }\n    public double Europe { get; set; }\n    public double China { get; set; }\n    public double America { get; set; }\n}\n\npublic class CountryRenewableElectricity\n    : List<CountryRenewableElectricityItem>\n{\n    public CountryRenewableElectricity()\n    {\n        this.Add(new CountryRenewableElectricityItem()\n        {\n            Year = @\"2009\",\n            Europe = 34,\n            China = 21,\n            America = 19\n        });\n        this.Add(new CountryRenewableElectricityItem()\n        {\n            Year = @\"2010\",\n            Europe = 43,\n            China = 26,\n            America = 24\n        });\n        this.Add(new CountryRenewableElectricityItem()\n        {\n            Year = @\"2011\",\n            Europe = 66,\n            China = 29,\n            America = 28\n        });\n        this.Add(new CountryRenewableElectricityItem()\n        {\n            Year = @\"2012\",\n            Europe = 69,\n            China = 32,\n            America = 26\n        });\n        this.Add(new CountryRenewableElectricityItem()\n        {\n            Year = @\"2013\",\n            Europe = 58,\n            China = 47,\n            America = 38\n        });\n        this.Add(new CountryRenewableElectricityItem()\n        {\n            Year = @\"2014\",\n            Europe = 40,\n            China = 46,\n            America = 31\n        });\n        this.Add(new CountryRenewableElectricityItem()\n        {\n            Year = @\"2015\",\n            Europe = 78,\n            China = 50,\n            America = 19\n        });\n        this.Add(new CountryRenewableElectricityItem()\n        {\n            Year = @\"2016\",\n            Europe = 13,\n            China = 90,\n            America = 52\n        });\n        this.Add(new CountryRenewableElectricityItem()\n        {\n            Year = @\"2017\",\n            Europe = 78,\n            China = 132,\n            America = 50\n        });\n        this.Add(new CountryRenewableElectricityItem()\n        {\n            Year = @\"2018\",\n            Europe = 40,\n            China = 134,\n            America = 34\n        });\n        this.Add(new CountryRenewableElectricityItem()\n        {\n            Year = @\"2018\",\n            Europe = 40,\n            China = 134,\n            America = 34\n        });\n        this.Add(new CountryRenewableElectricityItem()\n        {\n            Year = @\"2019\",\n            Europe = 80,\n            China = 96,\n            America = 38\n        });\n    }\n}",
    "isMain": true,
    "fileExtension": "cs",
    "fileHeader": "DATA"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/category-chart/axis-titles/Program.cs",
    "content": "using System;\nusing System.Net.Http;\nusing System.Collections.Generic;\nusing System.Threading.Tasks;\nusing System.Text;\nusing Microsoft.AspNetCore.Components.WebAssembly.Hosting;\nusing Microsoft.Extensions.Configuration;\nusing Microsoft.Extensions.DependencyInjection;\nusing Microsoft.Extensions.Logging;\nusing IgniteUI.Blazor.Controls; // for registering Ignite UI modules\n\nnamespace Infragistics.Samples\n{\n    public class Program\n    {\n        public static async Task Main(string[] args)\n        {\n            var builder = WebAssemblyHostBuilder.CreateDefault(args);\n            builder.RootComponents.Add<App>(\"app\");\n            builder.Services.AddScoped(sp => new HttpClient { BaseAddress = new Uri(builder.HostEnvironment.BaseAddress) });\n            // registering Ignite UI modules\n            builder.Services.AddIgniteUIBlazor(\n                typeof(IgbLegendModule),\n                typeof(IgbCategoryChartModule)\n            );\n            await builder.Build().RunAsync();\n        }\n    }\n}",
    "isMain": true,
    "fileExtension": "cs",
    "fileHeader": "MODULES"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/charts/category-chart/axis-titles/wwwroot/index.css",
    "content": "/*\r\nCSS styles are loaded from the shared CSS file located at:\r\nhttps://static.infragistics.com/xplatform/css/samples/\r\n*/",
    "isMain": true,
    "fileExtension": "css",
    "fileHeader": "css"
  }
]
}