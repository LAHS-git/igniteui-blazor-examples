{
 "sampleFiles":
[
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/menus/nav-drawer/add-positions-navbar/App.razor",
    "content": "\n@using IgniteUI.Blazor.Controls\n\n<div class=\"container vertical\" @onclick=\"OnContainerClick\">\n    <IgbNavDrawer @ref=\"@NavDrawerRef\" style=\"position: relative\">\n        <IgbNavDrawerHeaderItem>\n            Sample Drawer\n        </IgbNavDrawerHeaderItem>\n\n        <IgbNavDrawerItem>\n            <IgbIcon @ref=\"@HomeIcon\" slot=\"icon\" IconName=\"home\" Collection=\"material\" />\n            <span slot=\"content\">Home</span>\n        </IgbNavDrawerItem>\n\n        <IgbNavDrawerItem>\n            <IgbIcon slot=\"icon\" IconName=\"search\" Collection=\"material\" />\n            <span slot=\"content\">Search</span>\n        </IgbNavDrawerItem>\n    </IgbNavDrawer>\n\n    <div id=\"content\" style=\"width: 100%\">\n        <IgbRadioGroup id=\"radio-group\" Alignment=\"RadioGroupAlignment.Horizontal\">\n            <IgbRadio Value=\"Start\" LabelPosition=\"RadioLabelPosition.After\" Checked=\"true\" Change=\"OnRadioOptionClick\">Start</IgbRadio>\n            <IgbRadio Value=\"End\" LabelPosition=\"RadioLabelPosition.After\" Change=\"OnRadioOptionClick\">End</IgbRadio>\n            <IgbRadio Value=\"Top\" LabelPosition=\"RadioLabelPosition.After\" Change=\"OnRadioOptionClick\">Top</IgbRadio>\n            <IgbRadio Value=\"Bottom\" LabelPosition=\"RadioLabelPosition.After\" Change=\"OnRadioOptionClick\">Bottom</IgbRadio>\n        </IgbRadioGroup>\n\n        <IgbNavbar>\n            <IgbIcon slot=\"start\" IconName=\"menu\" Collection=\"material\" @onclick=\"OnMenuIconClick\" />\n            <h2>Home</h2>\n        </IgbNavbar>\n    </div>\n</div>\n\n@code {\n    \n\n    public IgbIcon HomeIcon { get; set; }\n    public IgbNavDrawer NavDrawerRef { get; set; }\n\n    protected override async Task OnAfterRenderAsync(bool firstRender)\n    {\n        if(firstRender && this.HomeIcon != null)\n        {\n            await this.HomeIcon.EnsureReady();\n            await this.HomeIcon.RegisterIconAsync(\"home\", \"https://unpkg.com/material-design-icons@3.0.1/action/svg/production/ic_home_24px.svg\", \"material\");\n            await this.HomeIcon.RegisterIconAsync(\"search\", \"https://unpkg.com/material-design-icons@3.0.1/action/svg/production/ic_search_24px.svg\", \"material\");\n            await this.HomeIcon.RegisterIconAsync(\"menu\", \"https://unpkg.com/material-design-icons@3.0.1/navigation/svg/production/ic_menu_24px.svg\", \"material\");\n        }\n    }\n\n    public void OnRadioOptionClick(IgbComponentBoolValueChangedEventArgs args)\n    {\n        IgbRadio radio = args.Parent as IgbRadio;\n\n        if (this.NavDrawerRef != null)\n        {\n            switch (radio.Value)\n            {\n                case \"Start\":\n                    {\n                        this.NavDrawerRef.Position = NavDrawerPosition.Start;\n                        break;\n                    }\n                case \"End\":\n                    {\n                        this.NavDrawerRef.Position = NavDrawerPosition.End;\n                        break;\n                    }\n                case \"Top\":\n                    {\n                        this.NavDrawerRef.Position = NavDrawerPosition.Top;\n                        break;\n                    }\n                case \"Bottom\":\n                    {\n                        this.NavDrawerRef.Position = NavDrawerPosition.Bottom;\n                        break;\n                    }\n            }\n        }\n    }\n\n    bool isNavDrawerOpen = false;\n    bool hitMenuIconFirst = false;\n    public void OnMenuIconClick()\n    {\n        if(this.NavDrawerRef != null)\n        {\n            this.NavDrawerRef.Show();\n            hitMenuIconFirst = true;\n            isNavDrawerOpen = true;\n        }\n    }\n\n    public void OnContainerClick(MouseEventArgs args)\n    {\n        if (isNavDrawerOpen && !hitMenuIconFirst)\n        {\n            this.NavDrawerRef.Hide();\n            isNavDrawerOpen = false;\n        }\n\n        hitMenuIconFirst = false;\n    }\n}",
    "isMain": true,
    "fileExtension": "razor",
    "fileHeader": "razor"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/menus/nav-drawer/add-positions-navbar/Program.cs",
    "content": "using System;\nusing System.Net.Http;\nusing System.Collections.Generic;\nusing System.Threading.Tasks;\nusing System.Text;\nusing Microsoft.AspNetCore.Components.WebAssembly.Hosting;\nusing Microsoft.Extensions.Configuration;\nusing Microsoft.Extensions.DependencyInjection;\nusing Microsoft.Extensions.Logging;\nusing IgniteUI.Blazor.Controls; // for registering Ignite UI modules\n\nnamespace Infragistics.Samples\n{\n    public class Program\n    {\n        public static async Task Main(string[] args)\n        {\n            var builder = WebAssemblyHostBuilder.CreateDefault(args);\n            builder.RootComponents.Add<App>(\"app\");\n            builder.Services.AddScoped(sp => new HttpClient { BaseAddress = new Uri(builder.HostEnvironment.BaseAddress) });\n            // registering Ignite UI modules\n            builder.Services.AddIgniteUIBlazor(\n                typeof(IgbNavbarModule),\n                typeof(IgbNavDrawerModule),\n                typeof(IgbNavDrawerHeaderItemModule),\n                typeof(IgbNavDrawerItemModule),\n                typeof(IgbIconModule),\n                typeof(IgbRadioGroupModule),\n                typeof(IgbRadioModule)\n   );\n            await builder.Build().RunAsync();\n        }\n    }\n}",
    "isMain": true,
    "fileExtension": "cs",
    "fileHeader": "MODULES"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/menus/nav-drawer/add-positions-navbar/wwwroot/index.css",
    "content": "/* \r\nCSS styles are loaded from the shared CSS file located at:\r\nhttps://static.infragistics.com/xplatform/css/samples/\r\n*/",
    "isMain": true,
    "fileExtension": "css",
    "fileHeader": "css"
  }
]
}