{
 "sampleFiles":
[
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/inputs/dropdown/item/App.razor",
    "content": "\n@using IgniteUI.Blazor.Controls\n\n<div class=\"container sample center\">\n    <IgbDropdown>\n        <IgbButton slot=\"target\">Category</IgbButton>\n        <IgbDropdownItem>\n            <IgbIcon @ref=HotelIcon slot=\"prefix\" IconName=\"hotel-icon\" Collection=\"material\"></IgbIcon>\n            Hotel\n        </IgbDropdownItem>\n        <IgbDropdownItem Disabled=\"true\">\n            <IgbIcon @ref=GroceryIcon slot=\"prefix\" IconName=\"grocery-icon\" Collection=\"material\"></IgbIcon>\n            Grocery\n        </IgbDropdownItem>\n        <IgbDropdownItem Selected=\"true\">\n            <IgbIcon @ref=RestaurantIcon slot=\"prefix\" IconName=\"restaurant-icon\" Collection=\"material\"></IgbIcon>\n            Restaurant\n        </IgbDropdownItem>\n    </IgbDropdown>\n</div>\n\n@code {\n    \n\n    IgbIcon HotelIcon { get; set; }\n    IgbIcon GroceryIcon { get; set; }\n    IgbIcon RestaurantIcon { get; set; }\n\n    protected override async Task OnAfterRenderAsync(bool firstRender)\n    {\n        if (firstRender && this.HotelIcon != null)\n        {\n            await this.HotelIcon.EnsureReady();\n            //hotel-icon\n            string hotelIcon = \"<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 0 24 24' width='24px'><path d='M0 0h24v24H0V0z' fill='none'/><path d='M7 14c1.66 0 3-1.34 3-3S8.66 8 7 8s-3 1.34-3 3 1.34 3 3 3zm0-4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm12-3h-8v8H3V5H1v15h2v-3h18v3h2v-9c0-2.21-1.79-4-4-4zm2 8h-8V9h6c1.1 0 2 .9 2 2v4z'/></svg>\";\n            await this.HotelIcon.RegisterIconFromTextAsync(\"hotel-icon\", hotelIcon, \"material\");\n        }\n\n        if (firstRender && this.GroceryIcon != null)\n        {\n            await this.GroceryIcon.EnsureReady();\n            //grocery-icon\n            string groceryIcon = \"<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 0 24 24' width='24px'><path d='M0 0h24v24H0V0z' fill='none'/><path d='M7 18c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2zm-1.45-5c.75 0 1.41-.41 1.75-1.03l3.58-6.49c.37-.66-.11-1.48-.87-1.48H5.21l-.94-2H1v2h2l3.6 7.59-1.35 2.44C4.52 15.37 5.48 17 7 17h12v-2H7l1.1-2h7.45zM6.16 6h12.15l-2.76 5H8.53L6.16 6z'/></svg>\";\n            await this.GroceryIcon.RegisterIconFromTextAsync(\"grocery-icon\", groceryIcon, \"material\");\n        }\n\n        if (firstRender && this.RestaurantIcon != null)\n        {\n            await this.RestaurantIcon.EnsureReady();\n            //restaurant-icon\n            string restaurantIcon = \"<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 0 24 24' width='24px'><path d='M0 0h24v24H0V0z' fill='none'/><path d='M16 6v8h3v8h2V2c-2.76 0-5 2.24-5 4zm-5 3H9V2H7v7H5V2H3v7c0 2.21 1.79 4 4 4v9h2v-9c2.21 0 4-1.79 4-4V2h-2v7z'/></svg>\";\n            await this.RestaurantIcon.RegisterIconFromTextAsync(\"restaurant-icon\", restaurantIcon, \"material\");\n        }\n    }\n}",
    "isMain": true,
    "fileExtension": "razor",
    "fileHeader": "razor"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/inputs/dropdown/item/Program.cs",
    "content": "using System;\nusing System.Net.Http;\nusing System.Collections.Generic;\nusing System.Threading.Tasks;\nusing System.Text;\nusing Microsoft.AspNetCore.Components.WebAssembly.Hosting;\nusing Microsoft.Extensions.Configuration;\nusing Microsoft.Extensions.DependencyInjection;\nusing Microsoft.Extensions.Logging;\nusing IgniteUI.Blazor.Controls; // for registering Ignite UI modules\n\nnamespace Infragistics.Samples\n{\n    public class Program\n    {\n        public static async Task Main(string[] args)\n        {\n            var builder = WebAssemblyHostBuilder.CreateDefault(args);\n            builder.RootComponents.Add<App>(\"app\");\n            builder.Services.AddScoped(sp => new HttpClient { BaseAddress = new Uri(builder.HostEnvironment.BaseAddress) });\n            // registering Ignite UI modules\n            builder.Services.AddIgniteUIBlazor(\n                typeof(IgbDropdownModule),\n                typeof(IgbDropdownItemModule),\n                typeof(IgbButtonModule)\n    );\n            await builder.Build().RunAsync();\n        }\n    }\n}",
    "isMain": true,
    "fileExtension": "cs",
    "fileHeader": "MODULES"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/inputs/dropdown/item/wwwroot/index.css",
    "content": "/* \r\nCSS styles are loaded from the shared CSS file located at:\r\nhttps://static.infragistics.com/xplatform/css/samples/\r\n*/",
    "isMain": true,
    "fileExtension": "css",
    "fileHeader": "css"
  }
]
}