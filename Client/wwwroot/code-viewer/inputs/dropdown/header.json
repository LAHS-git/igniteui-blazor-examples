{
 "sampleFiles":
[
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/inputs/dropdown/header/App.razor",
    "content": "\n@using IgniteUI.Blazor.Controls\n\n<div class=\"container sample center\">\n    <IgbDropdown>\n        <IgbButton slot=\"target\">Phone Settings</IgbButton>\n        @*<IgbDropDownHeader>\n            <span slot=\"label\">Ringer</span>\n        </IgbDropDownHeader>*@\n        <IgbDropdownItem Selected=\"true\">Ring\n            <IgbIcon @ref=RingIcon slot=\"prefix\" IconName=\"ring-icon\" Collection=\"material\"></IgbIcon>\n        </IgbDropdownItem>\n        <IgbDropdownItem>Vibrate\n            <IgbIcon @ref=VibrateIcon slot=\"prefix\" IconName=\"vibrate-icon\" Collection=\"material\"></IgbIcon>\n        </IgbDropdownItem>\n        <IgbDropdownItem>Silent\n            <IgbIcon @ref=SilentIcon slot=\"prefix\" IconName=\"silent-icon\" Collection=\"material\"></IgbIcon>\n        </IgbDropdownItem>\n    </IgbDropdown>\n</div>\n\n@code {\n    \n\n    IgbIcon RingIcon { get; set; }\n    IgbIcon VibrateIcon { get; set; }\n    IgbIcon SilentIcon { get; set; }\n\n    protected override async Task OnAfterRenderAsync(bool firstRender)\n    {\n        if (firstRender && this.RingIcon != null)\n        {\n            await this.RingIcon.EnsureReady();\n            //ring-icon\n            string ringIcon = \"<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 0 24 24' width='24px'><path d='M0 0h24v24H0V0z' fill='none'/><path d='M12 22c1.1 0 2-.9 2-2h-4c0 1.1.9 2 2 2zm6-6v-5c0-3.07-1.63-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.64 5.36 6 7.92 6 11v5l-2 2v1h16v-1l-2-2zm-2 1H8v-6c0-2.48 1.51-4.5 4-4.5s4 2.02 4 4.5v6zM7.58 4.08L6.15 2.65C3.75 4.48 2.17 7.3 2.03 10.5h2c.15-2.65 1.51-4.97 3.55-6.42zm12.39 6.42h2c-.15-3.2-1.73-6.02-4.12-7.85l-1.42 1.43c2.02 1.45 3.39 3.77 3.54 6.42z'/></svg>\";\n            await this.RingIcon.RegisterIconFromTextAsync(\"ring-icon\", ringIcon, \"material\");\n        }\n\n        if (firstRender && this.VibrateIcon != null)\n        {\n            await this.VibrateIcon.EnsureReady();\n            //vibrate-icon\n            string vibrateIcon = \"<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 0 24 24' width='24px'><path d='M0 0h24v24H0V0z' fill='none'/><path d='M0 15h2V9H0v6zm3 2h2V7H3v10zm19-8v6h2V9h-2zm-3 8h2V7h-2v10zM16.5 3h-9C6.67 3 6 3.67 6 4.5v15c0 .83.67 1.5 1.5 1.5h9c.83 0 1.5-.67 1.5-1.5v-15c0-.83-.67-1.5-1.5-1.5zM16 19H8V5h8v14z'/></svg>\";\n            await this.VibrateIcon.RegisterIconFromTextAsync(\"vibrate-icon\", vibrateIcon, \"material\");\n        }\n\n        if (firstRender && this.SilentIcon != null)\n        {\n            await this.SilentIcon.EnsureReady();\n            //silent-icon\n            string silentIcon = \"<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 0 24 24' width='24px'><path d='M0 0h24v24H0V0z' fill='none'/><path d='M12 22c1.1 0 2-.9 2-2h-4c0 1.1.9 2 2 2zm0-15.5c2.49 0 4 2.02 4 4.5v.1l2 2V11c0-3.07-1.63-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68c-.24.06-.47.15-.69.23l1.64 1.64c.18-.02.36-.05.55-.05zM5.41 3.35L4 4.76l2.81 2.81C6.29 8.57 6 9.74 6 11v5l-2 2v1h14.24l1.74 1.74 1.41-1.41L5.41 3.35zM16 17H8v-6c0-.68.12-1.32.34-1.9L16 16.76V17z'/></svg>\";\n            await this.SilentIcon.RegisterIconFromTextAsync(\"silent-icon\", silentIcon, \"material\");\n        }\n    }\n}",
    "isMain": true,
    "fileExtension": "razor",
    "fileHeader": "razor"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/inputs/dropdown/header/Program.cs",
    "content": "using System;\nusing System.Net.Http;\nusing System.Collections.Generic;\nusing System.Threading.Tasks;\nusing System.Text;\nusing Microsoft.AspNetCore.Components.WebAssembly.Hosting;\nusing Microsoft.Extensions.Configuration;\nusing Microsoft.Extensions.DependencyInjection;\nusing Microsoft.Extensions.Logging;\nusing IgniteUI.Blazor.Controls; // for registering Ignite UI modules\n\nnamespace Infragistics.Samples\n{\n    public class Program\n    {\n        public static async Task Main(string[] args)\n        {\n            var builder = WebAssemblyHostBuilder.CreateDefault(args);\n            builder.RootComponents.Add<App>(\"app\");\n            builder.Services.AddScoped(sp => new HttpClient { BaseAddress = new Uri(builder.HostEnvironment.BaseAddress) });\n            // registering Ignite UI modules\n            builder.Services.AddIgniteUIBlazor(\n                typeof(IgbDropdownModule),\n                typeof(IgbDropdownItemModule),\n                typeof(IgbDropdownHeaderModule),\n                typeof(IgbButtonModule)\n   );\n            await builder.Build().RunAsync();\n        }\n    }\n}",
    "isMain": true,
    "fileExtension": "cs",
    "fileHeader": "MODULES"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/inputs/dropdown/header/wwwroot/index.css",
    "content": "/* \r\nCSS styles are loaded from the shared CSS file located at:\r\nhttps://static.infragistics.com/xplatform/css/samples/\r\n*/",
    "isMain": true,
    "fileExtension": "css",
    "fileHeader": "css"
  }
]
}