{
 "sampleFiles":
[
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/inputs/icon-button/size/App.razor",
    "content": "\n@using IgniteUI.Blazor.Controls\n\n<div class=\"container vertical\" style=\"display: list-item\">\n\n    <style>\n        igc-icon{\n            height: 0rem;\n            width: 0rem;\n        }\n    </style>\n\n    <IgbIcon @ref=\"RegisterIconRef\" />\n    <IgbIconButton IconName=\"thumb-up\" Collection=\"material\" Variant=\"@IconButtonVariant.Contained\" Size=\"@SizableComponentSize.Small\" />\n    <IgbIconButton IconName=\"thumb-up\" Collection=\"material\" Variant=\"@IconButtonVariant.Contained\" Size=\"@SizableComponentSize.Medium\" />\n    <IgbIconButton IconName=\"thumb-up\" Collection=\"material\" Variant=\"@IconButtonVariant.Contained\" Size=\"@SizableComponentSize.Large\" />\n</div>\n\n@code {\n    \n\n    public IgbIcon RegisterIconRef { get; set; }\n\n    protected override async Task OnAfterRenderAsync(bool firstRender)\n    {\n        if(firstRender && this.RegisterIconRef != null)\n        {\n            await this.RegisterIconRef.EnsureReady();\n            string thumbUpIcon = \"<svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'><path d='M1 21h4V9H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 1 7.59 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-1.91l-.01-.01L23 10z'></path></svg>\";\n            await this.RegisterIconRef.RegisterIconFromTextAsync(\"thumb-up\", thumbUpIcon, \"material\");\n        }\n    }\n}",
    "isMain": true,
    "fileExtension": "razor",
    "fileHeader": "razor"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/inputs/icon-button/size/Program.cs",
    "content": "using System;\nusing System.Net.Http;\nusing System.Collections.Generic;\nusing System.Threading.Tasks;\nusing System.Text;\nusing Microsoft.AspNetCore.Components.WebAssembly.Hosting;\nusing Microsoft.Extensions.Configuration;\nusing Microsoft.Extensions.DependencyInjection;\nusing Microsoft.Extensions.Logging;\nusing IgniteUI.Blazor.Controls; // for registering Ignite UI modules\n\nnamespace Infragistics.Samples\n{\n    public class Program\n    {\n        public static async Task Main(string[] args)\n        {\n            var builder = WebAssemblyHostBuilder.CreateDefault(args);\n            builder.RootComponents.Add<App>(\"app\");\n            builder.Services.AddScoped(sp => new HttpClient { BaseAddress = new Uri(builder.HostEnvironment.BaseAddress) });\n            // registering Ignite UI modules\n            builder.Services.AddIgniteUIBlazor(\n                typeof(IgbIconButtonModule),\n                typeof(IgbIconModule)\n   );\n            await builder.Build().RunAsync();\n        }\n    }\n}",
    "isMain": true,
    "fileExtension": "cs",
    "fileHeader": "MODULES"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/inputs/icon-button/size/wwwroot/index.css",
    "content": "/* \r\nCSS styles are loaded from the shared CSS file located at:\r\nhttps://static.infragistics.com/xplatform/css/samples/\r\n*/",
    "isMain": true,
    "fileExtension": "css",
    "fileHeader": "css"
  }
]
}