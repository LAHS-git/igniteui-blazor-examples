{
 "sampleFiles":
[
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/inputs/combo/templates/App.razor",
    "content": "\n@using IgniteUI.Blazor.Controls\n\n<div class=\"container sample center\">\n    <IgbCombo\n        Data=\"Data\"\n        ValueKey=\"Id\"\n        DisplayKey=\"Name\"\n        GroupKey=\"Country\"\n        ItemTemplateScript=\"ComboItemTemplate\"\n        GroupHeaderTemplateScript=\"ComboGroupHeaderTemplate\">\n        <header slot=\"header\">\n            Header content goes here\n        </header>\n        <IgbIcon @ref=\"@iconRef\" name=\"clear\" slot=\"clear-icon\"></IgbIcon>\n        <IgbIcon name=\"down\" slot=\"toggle-icon\"></IgbIcon>\n        <footer slot=\"footer\">\n            Footer content goes here\n        </footer>\n    </IgbCombo>\n</div>\n\n@code {\n    private List<City> Data;\n    private IgbIcon iconRef { get; set; }\n    private string toggleIcon = \"<svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'><path d='M7 10l5 5 5-5z'/></svg>\";\n    private string clearIcon = \"<svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'><path d='M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z'/></svg>\";\n\n    protected override void OnInitialized() {\n        this.Data = SampleData.Cities;\n    }\n\n    protected override void OnAfterRender(bool firstRender) {\n        if (firstRender) {\n            this.iconRef.EnsureReady().ContinueWith(new Action<Task>((e) => {\n                this.iconRef.RegisterIconFromTextAsync(\"down\", toggleIcon, \"default\");\n                this.iconRef.RegisterIconFromTextAsync(\"clear\", clearIcon, \"default\");\n            }));\n        }\n    }\n}",
    "isMain": true,
    "fileExtension": "razor",
    "fileHeader": "razor"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/inputs/combo/templates/Program.cs",
    "content": "using System;\nusing System.Net.Http;\nusing System.Collections.Generic;\nusing System.Threading.Tasks;\nusing System.Text;\nusing Microsoft.AspNetCore.Components.WebAssembly.Hosting;\nusing Microsoft.Extensions.Configuration;\nusing Microsoft.Extensions.DependencyInjection;\nusing Microsoft.Extensions.Logging;\n\n// required for registering IgniteUIBlazor\nusing IgniteUI.Blazor.Controls;\n\nnamespace Infragistics.Samples\n{\n    public class Program\n    {\n        public static async Task Main(string[] args)\n        {\n            var builder = WebAssemblyHostBuilder.CreateDefault(args);\n            builder.RootComponents.Add<App>(\"app\");\n\n            builder.Services.AddScoped(sp => new HttpClient { BaseAddress = new Uri(builder.HostEnvironment.BaseAddress) });\n\n            // registering Infragistics Blazor\n            builder.Services.AddIgniteUIBlazor(typeof(IgbComboModule));\n            builder.Services.AddIgniteUIBlazor(typeof(IgbIconModule));\n\n            await builder.Build().RunAsync();\n        }\n    }\n}",
    "isMain": true,
    "fileExtension": "cs",
    "fileHeader": "MODULES"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/inputs/combo/templates/Services/Data.cs",
    "content": "using System;\nusing System.Collections;\nusing System.Collections.Generic;\n\nnamespace Infragistics.Samples\n{\n    public class City {\n        public string Id { get; set; }\n        public string Name { get; set; }\n        public string Country { get; set; }\n    }\n\n    public class SampleData {\n        public static List<City> Cities = GetCities();\n\n        public static List<City> GetCities() {\n            var data = new List<City> {\n                new City {\n                    Id = \"UK01\",\n                    Name = \"London\",\n                    Country = \"United Kingdom\",\n                },\n                new City {\n                    Id = \"UK02\",\n                    Name = \"Manchester\",\n                    Country = \"United Kingdom\",\n                },\n                new City {\n                    Id = \"UK03\",\n                    Name = \"Birmingham\",\n                    Country = \"United Kingdom\",\n                },\n                new City {\n                    Id = \"UK04\",\n                    Name = \"Glasgow\",\n                    Country = \"United Kingdom\",\n                },\n                new City {\n                    Id = \"UK05\",\n                    Name = \"Liverpool\",\n                    Country = \"United Kingdom\",\n                },\n                new City {\n                    Id = \"US01\",\n                    Name = \"New York\",\n                    Country = \"United States of America\",\n                },\n                new City {\n                    Id = \"US02\",\n                    Name = \"Miami\",\n                    Country = \"United States of America\",\n                },\n                new City {\n                    Id = \"US03\",\n                    Name = \"Philadelphia\",\n                    Country = \"United States of America\",\n                },\n                new City {\n                    Id = \"US04\",\n                    Name = \"Chicago\",\n                    Country = \"United States of America\",\n                },\n                new City {\n                    Id = \"US05\",\n                    Name = \"Springfield\",\n                    Country = \"United States of America\",\n                },\n                new City {\n                    Id = \"US06\",\n                    Name = \"Los Angeles\",\n                    Country = \"United States of America\",\n                },\n                new City {\n                    Id = \"US07\",\n                    Name = \"Houston\",\n                    Country = \"United States of America\",\n                },\n                new City {\n                    Id = \"US08\",\n                    Name = \"Phoenix\",\n                    Country = \"United States of America\",\n                },\n                new City {\n                    Id = \"US09\",\n                    Name = \"San Diego\",\n                    Country = \"United States of America\",\n                },\n                new City {\n                    Id = \"US10\",\n                    Name = \"Dallas\",\n                    Country = \"United States of America\",\n                },\n                new City {\n                    Id = \"BG01\",\n                    Name = \"Sofia\",\n                    Country = \"Bulgaria\",\n                },\n                new City {\n                    Id = \"BG02\",\n                    Name = \"Plovdiv\",\n                    Country = \"Bulgaria\",\n                },\n                new City {\n                    Id = \"BG03\",\n                    Name = \"Varna\",\n                    Country = \"Bulgaria\",\n                },\n                new City {\n                    Id = \"BG04\",\n                    Name = \"Burgas\",\n                    Country = \"Bulgaria\",\n                },\n                new City {\n                    Id = \"IT01\",\n                    Name = \"Rome\",\n                    Country = \"Italy\",\n                },\n                new City {\n                    Id = \"IT02\",\n                    Name = \"Milan\",\n                    Country = \"Italy\",\n                },\n                new City {\n                    Id = \"IT03\",\n                    Name = \"Naples\",\n                    Country = \"Italy\",\n                },\n                new City {\n                    Id = \"IT04\",\n                    Name = \"Turin\",\n                    Country = \"Italy\",\n                },\n                new City {\n                    Id = \"IT05\",\n                    Name = \"Palermo\",\n                    Country = \"Italy\",\n                },\n                new City {\n                    Id = \"IT06\",\n                    Name = \"Florence\",\n                    Country = \"Italy\",\n                },\n            };\n\n            return data;\n        }\n    }\n}",
    "isMain": true,
    "fileExtension": "cs",
    "fileHeader": "DATA"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/inputs/combo/templates/wwwroot/templates.js",
    "content": "const html = window.igTemplating.html;\r\n\r\nconst itemTemplate = ({ item }) => {\r\n    return html`<span><b>${item.Name}</b> [${item.Id}]</span>`;\r\n}\r\n\r\nconst groupHeaderTemplate = ({ item }) => {\r\n    return html`<span>Country of ${item.Country}</span>`;\r\n}\r\n\r\nigRegisterScript(\"ComboItemTemplate\", itemTemplate, false);\r\nigRegisterScript('ComboGroupHeaderTemplate', groupHeaderTemplate, false)\r\n",
    "isMain": true,
    "fileExtension": "js",
    "fileHeader": "js"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/inputs/combo/templates/wwwroot/index.css",
    "content": "/* \r\nCSS styles are loaded from the shared CSS file located at:\r\nhttps://static.infragistics.com/xplatform/css/samples/\r\n*/\r\n\r\nigc-combo::part(header),\r\nigc-combo::part(footer) {\r\n    padding: 12px 8px;\r\n    text-align: center;\r\n}\r\n\r\nigc-combo::part(empty) {\r\n    font-size: 16px;\r\n}\r\n",
    "isMain": true,
    "fileExtension": "css",
    "fileHeader": "css"
  }
]
}