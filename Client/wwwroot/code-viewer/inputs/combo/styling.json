{
 "sampleFiles":
[
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/inputs/combo/styling/App.razor",
    "content": "\n@using IgniteUI.Blazor.Controls\n\n<div class=\"container sample center\">\n    <IgbCombo\n        Label=\"Destinations\"\n        Data=\"Data\"\n        ValueKey=\"Id\"\n        DisplayKey=\"Name\"\n        GroupKey=\"Country\"\n        CaseSensitiveIcon>\n        <span slot=\"helper-text\">Choose the desired place</span>\n        <IgbIcon @ref=\"locationIconRef\" slot=\"prefix\" name=\"place\" collection=\"material\"></IgbIcon>\n    </IgbCombo>\n</div>\n\n@code {\n    private List<City> Data;\n    private IgbIcon locationIconRef { get; set; }\n    private string placeSvg = \"<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 0 24 24' width='24px'><path d='M0 0h24v24H0z' fill='none'/><path d='M12 12c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm6-1.8C18 6.57 15.35 4 12 4s-6 2.57-6 6.2c0 2.34 1.95 5.44 6 9.14 4.05-3.7 6-6.8 6-9.14zM12 2c4.2 0 8 3.22 8 8.2 0 3.32-2.67 7.25-8 11.8-5.33-4.55-8-8.48-8-11.8C4 5.22 7.8 2 12 2z'/></svg>\";\n\n    protected override void OnInitialized() {\n        this.Data = SampleData.Cities;\n    }\n\n    protected override void OnAfterRender(bool firstRender) {\n        if (firstRender) {\n            this.locationIconRef.EnsureReady().ContinueWith(new Action<Task>((e) => {\n                this.locationIconRef.RegisterIconFromTextAsync(\"place\", placeSvg, \"material\");\n            }));\n        }\n    }\n}",
    "isMain": true,
    "fileExtension": "razor",
    "fileHeader": "razor"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/inputs/combo/styling/Program.cs",
    "content": "using System;\nusing System.Net.Http;\nusing System.Collections.Generic;\nusing System.Threading.Tasks;\nusing System.Text;\nusing Microsoft.AspNetCore.Components.WebAssembly.Hosting;\nusing Microsoft.Extensions.Configuration;\nusing Microsoft.Extensions.DependencyInjection;\nusing Microsoft.Extensions.Logging;\n\n// required for registering IgniteUIBlazor\nusing IgniteUI.Blazor.Controls;\n\nnamespace Infragistics.Samples\n{\n    public class Program\n    {\n        public static async Task Main(string[] args)\n        {\n            var builder = WebAssemblyHostBuilder.CreateDefault(args);\n            builder.RootComponents.Add<App>(\"app\");\n\n            builder.Services.AddScoped(sp => new HttpClient { BaseAddress = new Uri(builder.HostEnvironment.BaseAddress) });\n\n            // registering Infragistics Blazor\n            builder.Services.AddIgniteUIBlazor(typeof(IgbComboModule));\n            builder.Services.AddIgniteUIBlazor(typeof(IgbIconModule));\n\n            await builder.Build().RunAsync();\n        }\n    }\n}",
    "isMain": true,
    "fileExtension": "cs",
    "fileHeader": "MODULES"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/inputs/combo/styling/Services/Data.cs",
    "content": "using System;\nusing System.Collections;\nusing System.Collections.Generic;\n\nnamespace Infragistics.Samples\n{\n    public class City {\n        public string Id { get; set; }\n        public string Name { get; set; }\n        public string Country { get; set; }\n    }\n\n    public class SampleData {\n        public static List<City> Cities = GetCities();\n\n        public static List<City> GetCities() {\n            var data = new List<City> {\n                new City {\n                    Id = \"UK01\",\n                    Name = \"London\",\n                    Country = \"United Kingdom\",\n                },\n                new City {\n                    Id = \"UK02\",\n                    Name = \"Manchester\",\n                    Country = \"United Kingdom\",\n                },\n                new City {\n                    Id = \"UK03\",\n                    Name = \"Birmingham\",\n                    Country = \"United Kingdom\",\n                },\n                new City {\n                    Id = \"UK04\",\n                    Name = \"Glasgow\",\n                    Country = \"United Kingdom\",\n                },\n                new City {\n                    Id = \"UK05\",\n                    Name = \"Liverpool\",\n                    Country = \"United Kingdom\",\n                },\n                new City {\n                    Id = \"US01\",\n                    Name = \"New York\",\n                    Country = \"United States of America\",\n                },\n                new City {\n                    Id = \"US02\",\n                    Name = \"Miami\",\n                    Country = \"United States of America\",\n                },\n                new City {\n                    Id = \"US03\",\n                    Name = \"Philadelphia\",\n                    Country = \"United States of America\",\n                },\n                new City {\n                    Id = \"US04\",\n                    Name = \"Chicago\",\n                    Country = \"United States of America\",\n                },\n                new City {\n                    Id = \"US05\",\n                    Name = \"Springfield\",\n                    Country = \"United States of America\",\n                },\n                new City {\n                    Id = \"US06\",\n                    Name = \"Los Angeles\",\n                    Country = \"United States of America\",\n                },\n                new City {\n                    Id = \"US07\",\n                    Name = \"Houston\",\n                    Country = \"United States of America\",\n                },\n                new City {\n                    Id = \"US08\",\n                    Name = \"Phoenix\",\n                    Country = \"United States of America\",\n                },\n                new City {\n                    Id = \"US09\",\n                    Name = \"San Diego\",\n                    Country = \"United States of America\",\n                },\n                new City {\n                    Id = \"US10\",\n                    Name = \"Dallas\",\n                    Country = \"United States of America\",\n                },\n                new City {\n                    Id = \"BG01\",\n                    Name = \"Sofia\",\n                    Country = \"Bulgaria\",\n                },\n                new City {\n                    Id = \"BG02\",\n                    Name = \"Plovdiv\",\n                    Country = \"Bulgaria\",\n                },\n                new City {\n                    Id = \"BG03\",\n                    Name = \"Varna\",\n                    Country = \"Bulgaria\",\n                },\n                new City {\n                    Id = \"BG04\",\n                    Name = \"Burgas\",\n                    Country = \"Bulgaria\",\n                },\n                new City {\n                    Id = \"IT01\",\n                    Name = \"Rome\",\n                    Country = \"Italy\",\n                },\n                new City {\n                    Id = \"IT02\",\n                    Name = \"Milan\",\n                    Country = \"Italy\",\n                },\n                new City {\n                    Id = \"IT03\",\n                    Name = \"Naples\",\n                    Country = \"Italy\",\n                },\n                new City {\n                    Id = \"IT04\",\n                    Name = \"Turin\",\n                    Country = \"Italy\",\n                },\n                new City {\n                    Id = \"IT05\",\n                    Name = \"Palermo\",\n                    Country = \"Italy\",\n                },\n                new City {\n                    Id = \"IT06\",\n                    Name = \"Florence\",\n                    Country = \"Italy\",\n                },\n            };\n\n            return data;\n        }\n    }\n}",
    "isMain": true,
    "fileExtension": "cs",
    "fileHeader": "DATA"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/inputs/combo/styling/wwwroot/index.css",
    "content": "/* \r\nCSS styles are loaded from the shared CSS file located at:\r\nhttps://static.infragistics.com/xplatform/css/samples/\r\n*/\r\nigc-combo::part(label),\r\nigc-combo::part(empty),\r\nigc-combo::part(group-header) {\r\n    color: #2b3a55;\r\n}\r\n\r\nigc-combo::part(native-input),\r\nigc-combo::part(list-wrapper) {\r\n    background-color: #f2e5e5;\r\n}\r\n\r\nigc-combo::part(item selected) {\r\n    background: #e8c4c4;\r\n}\r\n\r\nigc-combo::part(item selected active),\r\nigc-combo::part(item selected):hover {\r\n    background: #ce7777;\r\n}\r\n\r\nigc-combo::part(prefix),\r\nigc-combo::part(suffix),\r\nigc-combo::part(case-icon) {\r\n    color: #f2e5e5;\r\n    background-color: #2b3a55;\r\n}\r\n\r\nigc-combo::part(checkbox checked)::after {\r\n    background: #2b3a55;\r\n    box-shadow: none;\r\n}\r\n",
    "isMain": true,
    "fileExtension": "css",
    "fileHeader": "css"
  }
]
}