{
 "sampleFiles":
[
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/inputs/input/styling/App.razor",
    "content": "\n@using IgniteUI.Blazor.Controls\n\n<div class=\"container sample center\">\n    <style>\n        igc-input::part(input) {\n            background-color: rgb(169, 214, 229);\n            border-color: rgb(42, 111, 151);\n        }\n\n        igc-input::part(label) {\n            color: rgb(1, 42, 74);\n        }\n\n        igc-input::part(prefix),\n        igc-input::part(suffix) {\n            color: white;\n            border-color: rgb(42, 111, 151);\n            background-color: rgb(70, 143, 175);\n        }\n    </style>\n\n    <IgbInput DisplayType=\"@InputType.Tel\" Label=\"Phone\" Placeholder=\"888 123 4567\">\n        <span slot=\"prefix\">+359</span>\n        <IgbIcon @ref=\"IconRef\" slot=\"suffix\" IconName=\"phone\" Collection=\"material\"/>\n    </IgbInput>\n</div>\n\n@code {\n    \n\n    private IgbIcon IconRef { get; set; }\n\n    protected override async Task OnAfterRenderAsync(bool firstRender)\n    {\n        if(firstRender && this.IconRef != null)\n        {\n            await this.IconRef.EnsureReady();\n            string phoneIcon = \"<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 0 24 24' width='24px' fill='#000000'><path d='M0 0h24v24H0z' fill='none'/><path d='M6.62 10.79c1.44 2.83 3.76 5.14 6.59 6.59l2.2-2.2c.27-.27.67-.36 1.02-.24 1.12.37 2.33.57 3.57.57.55 0 1 .45 1 1V20c0 .55-.45 1-1 1-9.39 0-17-7.61-17-17 0-.55.45-1 1-1h3.5c.55 0 1 .45 1 1 0 1.25.2 2.45.57 3.57.11.35.03.74-.25 1.02l-2.2 2.2z'/></svg>'\";\n            await this.IconRef.RegisterIconFromTextAsync(\"phone\", phoneIcon, \"material\");\n        }\n    }\n}",
    "isMain": true,
    "fileExtension": "razor",
    "fileHeader": "razor"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/inputs/input/styling/Program.cs",
    "content": "using System;\nusing System.Net.Http;\nusing System.Collections.Generic;\nusing System.Threading.Tasks;\nusing System.Text;\nusing Microsoft.AspNetCore.Components.WebAssembly.Hosting;\nusing Microsoft.Extensions.Configuration;\nusing Microsoft.Extensions.DependencyInjection;\nusing Microsoft.Extensions.Logging;\nusing IgniteUI.Blazor.Controls; // for registering Ignite UI modules\n\nnamespace Infragistics.Samples\n{\n    public class Program\n    {\n        public static async Task Main(string[] args)\n        {\n            var builder = WebAssemblyHostBuilder.CreateDefault(args);\n            builder.RootComponents.Add<App>(\"app\");\n            builder.Services.AddScoped(sp => new HttpClient { BaseAddress = new Uri(builder.HostEnvironment.BaseAddress) });\n            // registering Ignite UI modules\n            builder.Services.AddIgniteUIBlazor(\n                typeof(IgbIconModule),\n                typeof(IgbInputModule)\n  );\n            await builder.Build().RunAsync();\n        }\n    }\n}",
    "isMain": true,
    "fileExtension": "cs",
    "fileHeader": "MODULES"
  },
  {
    "hasRelativeAssetsUrls": false,
    "path": "../../samples/inputs/input/styling/wwwroot/index.css",
    "content": "/* \r\nCSS styles are loaded from the shared CSS file located at:\r\nhttps://static.infragistics.com/xplatform/css/samples/\r\n*/",
    "isMain": true,
    "fileExtension": "css",
    "fileHeader": "css"
  }
]
}