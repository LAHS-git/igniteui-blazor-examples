@page "/samples/inputs/date-time-input/input-format-display-format"
@page "/samples/inputs/date-time-input-input-format-display-format"
@page         "/inputs/date-time-input/input-format-display-format"
@page         "/inputs/date-time-input-input-format-display-format"

@using IgniteUI.Blazor.Controls
@inject IIgniteUIBlazor IgniteUIBlazor

<div class="container vertical">
    <IgbDateTimeInput @ref="DateTimeInputRef" InputFormat="dd-MM-yy" DisplayFormat="medium">
        <IgbIcon IconName="clear" Collection="myIcons" slot="prefix" @onclick="OnClear"></IgbIcon>
    </IgbDateTimeInput>
    <IgbIcon @ref="RegisterIconRef"/>
</div>

@code {
    protected override void OnInitialized()
    {
        IgbIconModule.Register(IgniteUIBlazor);
        IgbDateTimeInputModule.Register(IgniteUIBlazor);
        IgbRadioGroupModule.Register(IgniteUIBlazor);
        IgbRadioModule.Register(IgniteUIBlazor);
        IgbRatingModule.Register(IgniteUIBlazor);
        IgbAccordionModule.Register(IgniteUIBlazor);
        IgbExpansionPanelModule.Register(IgniteUIBlazor);
        IgbCheckboxModule.Register(IgniteUIBlazor);
        IgbSliderModule.Register(IgniteUIBlazor);
        IgbRangeSliderModule.Register(IgniteUIBlazor);

    }
    IgbDateTimeInput? DateTimeInputRef;
    IgbIcon? RegisterIconRef;

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && RegisterIconRef != null)
        {
            await RegisterIconRef.EnsureReady();
            var clearIcon = "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/></svg>";
            await RegisterIconRef.RegisterIconFromTextAsync("clear", clearIcon, "myIcons");
        }
    }
    public async Task OnClear()
    {
        await DateTimeInputRef?.ClearAsync();
    }
}